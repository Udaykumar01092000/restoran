{"ast":null,"code":"// import { createSlice } from \"@reduxjs/toolkit\";\n\n// let initialState = {\n//     cartItems : []\n// }\n\n// let slice = createSlice({\n//     name : \"cart\",\n//     initialState : initialState,\n//     reducers :{\n//         addToCart : (state , action)=>{\n//             state.cartItems.push(action.payload)\n//         },\n\n//         removeFromCart : (state , action)=>{\n//             state.cartItems.splice(action.payload , 1)\n//         }\n//     }\n// })\n\n// export const {addToCart , removeFromCart} = slice.actions\n// export default slice.reducer;\n\nimport { createSlice } from \"@reduxjs/toolkit\";\nlet initialState = {\n  cartItems: []\n};\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    addToCart: (state, action) => {\n      state.cartItems.push(action.payload);\n    },\n    removeFromCart: (state, action) => {\n      state.cartItems.splice(action.payload, 1);\n    },\n    updateQuantity: (state, action) => {\n      const {\n        index,\n        quantity\n      } = action.payload;\n      if (index >= 0 && index < state.cartItems.length) {\n        state.cartItems[index].Quantity = quantity;\n      }\n    }\n  }\n});\nexport const {\n  addToCart,\n  removeFromCart,\n  updateQuantity\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","cartItems","cartSlice","name","reducers","addToCart","state","action","push","payload","removeFromCart","splice","updateQuantity","index","quantity","length","Quantity","actions","reducer"],"sources":["C:/Users/SANTHOSH/React_Applications/swiggy/src/components/reducer.js"],"sourcesContent":["    // import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n\r\n    // let initialState = {\r\n    //     cartItems : []\r\n    // }\r\n\r\n    // let slice = createSlice({\r\n    //     name : \"cart\",\r\n    //     initialState : initialState,\r\n    //     reducers :{\r\n    //         addToCart : (state , action)=>{\r\n    //             state.cartItems.push(action.payload)\r\n    //         },\r\n\r\n    //         removeFromCart : (state , action)=>{\r\n    //             state.cartItems.splice(action.payload , 1)\r\n    //         }\r\n    //     }\r\n    // })\r\n\r\n    // export const {addToCart , removeFromCart} = slice.actions\r\n    // export default slice.reducer;\r\n\r\n\r\n    import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nlet initialState = {\r\n    cartItems: []\r\n};\r\n\r\nconst cartSlice = createSlice({\r\n    name: \"cart\",\r\n    initialState,\r\n    reducers: {\r\n        addToCart: (state, action) => {\r\n            state.cartItems.push(action.payload);\r\n        },\r\n        removeFromCart: (state, action) => {\r\n            state.cartItems.splice(action.payload, 1);\r\n        },\r\n        updateQuantity: (state, action) => {\r\n            const { index, quantity } = action.payload;\r\n            if (index >= 0 && index < state.cartItems.length) {\r\n                state.cartItems[index].Quantity = quantity;\r\n            }\r\n        }\r\n    }\r\n});\r\n\r\nexport const { addToCart, removeFromCart, updateQuantity } = cartSlice.actions;\r\nexport default cartSlice.reducer;\r\n"],"mappings":"AAAI;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAGA,SAASA,WAAW,QAAQ,kBAAkB;AAElD,IAAIC,YAAY,GAAG;EACfC,SAAS,EAAE;AACf,CAAC;AAED,MAAMC,SAAS,GAAGH,WAAW,CAAC;EAC1BI,IAAI,EAAE,MAAM;EACZH,YAAY;EACZI,QAAQ,EAAE;IACNC,SAAS,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC1BD,KAAK,CAACL,SAAS,CAACO,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC;IACxC,CAAC;IACDC,cAAc,EAAEA,CAACJ,KAAK,EAAEC,MAAM,KAAK;MAC/BD,KAAK,CAACL,SAAS,CAACU,MAAM,CAACJ,MAAM,CAACE,OAAO,EAAE,CAAC,CAAC;IAC7C,CAAC;IACDG,cAAc,EAAEA,CAACN,KAAK,EAAEC,MAAM,KAAK;MAC/B,MAAM;QAAEM,KAAK;QAAEC;MAAS,CAAC,GAAGP,MAAM,CAACE,OAAO;MAC1C,IAAII,KAAK,IAAI,CAAC,IAAIA,KAAK,GAAGP,KAAK,CAACL,SAAS,CAACc,MAAM,EAAE;QAC9CT,KAAK,CAACL,SAAS,CAACY,KAAK,CAAC,CAACG,QAAQ,GAAGF,QAAQ;MAC9C;IACJ;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAET,SAAS;EAAEK,cAAc;EAAEE;AAAe,CAAC,GAAGV,SAAS,CAACe,OAAO;AAC9E,eAAef,SAAS,CAACgB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
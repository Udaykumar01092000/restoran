{"ast":null,"code":"// import React, { useEffect, useState } from 'react';\n// import axios from 'axios';\n// import { useParams } from 'react-router-dom';\n// import '../components/restaurantspec.css';\n// import { addToCart } from './reducer';\n// import { useDispatch } from 'react-redux';\n// import ScrollToTopButton from './scrolltop';\n\n// function Restaurantspec() {\n//     const dispatch = useDispatch();\n//     const { restaurantId, restaurantName } = useParams();\n//     const [restaurantMenu, setRestaurantMenu] = useState([]);\n//     const [openAccordion, setOpenAccordion] = useState(0);\n//     const [quantities, setQuantities] = useState({});\n\n//     useEffect(() => {\n//         axios\n//             .get(`https://www.swiggy.com/dapi/menu/pl?page-type=REGULAR_MENU&complete-menu=true&lat=17.37240&lng=78.43780&restaurantId=${restaurantId}&catalog_qa=undefined&submitAction=ENTER`)\n//             .then((res) => {\n//                 setRestaurantMenu(res.data?.data?.cards[4]?.groupedCard?.cardGroupMap?.REGULAR?.cards.slice(1) || []);\n//             })\n//             .catch((error) => {\n//                 console.error('Error fetching restaurant menu:', error);\n//             });\n//     }, [restaurantId]);\n\n//     const toggleAccordion = (index) => {\n//         setOpenAccordion(openAccordion === index ? null : index);\n//     };\n\n//     const handleQuantityChange = (itemId, quantity) => {\n//         setQuantities((prevQuantities) => ({\n//             ...prevQuantities,\n//             [itemId]: quantity,\n//         }));\n//     };\n\n//     return (\n//         <div className=\"container\">\n//             <h2 className=\"restaurant-title\">{restaurantName} Menu</h2>\n//             <div className=\"accordion\" id=\"accordionExample\">\n//                 {restaurantMenu.map((item, i) => {\n//                     if (item?.card?.card?.itemCards) {\n//                         return (\n//                             <div className=\"accordion-item\" key={i}>\n//                                 <h2 className=\"accordion-header\">\n//                                     <button\n//                                         className={`accordion-button ${openAccordion === i ? '' : 'collapsed'}`}\n//                                         type=\"button\"\n//                                         onClick={() => toggleAccordion(i)}\n//                                         aria-expanded={openAccordion === i ? 'true' : 'false'}\n//                                         aria-controls={`collapse${i}`}\n//                                         data-bs-toggle=\"collapse\"\n//                                         data-bs-target={`#collapse${i}`}\n//                                     >\n//                                         <b className=\"category\">\n//                                             {item.card.card.title} - {item?.card?.card?.itemCards.length}\n//                                         </b>\n//                                         <i\n//                                             className={`fas ${\n//                                                 openAccordion === i ? 'fa-chevron-up' : 'fa-chevron-down'\n//                                             } accordion-icon`}\n//                                         ></i>\n//                                     </button>\n//                                 </h2>\n//                                 <div\n//                                     id={`collapse${i}`}\n//                                     className={`accordion-collapse collapse ${openAccordion === i ? 'show' : ''}`}\n//                                     aria-labelledby={`heading${i}`}\n//                                     data-bs-parent=\"#accordionExample\"\n//                                 >\n//                                     <div className=\"accordion-body\">\n//                                         <div className=\"row row-cols-1 row-cols-md-4 g-2\">\n//                                             {item?.card?.card?.itemCards?.map((item, j) => {\n//                                                 const quantity = quantities[item.card.info.id] || 1;\n//                                                 const price =\n//                                                     item.card.info.price !== undefined\n//                                                         ? item.card.info.price / 100\n//                                                         : item.card.info.defaultPrice !== undefined\n//                                                         ? item.card.info.defaultPrice / 100\n//                                                         : 'Price not available';\n//                                                 return (\n//                                                     <div className=\"col\" key={j}>\n//                                                         <div className=\"card\">\n//                                                             <img\n//                                                                 src={`https://media-assets.swiggy.com/swiggy/image/upload/fl_lossy,f_auto,q_auto,w_300,h_300,c_fit/${item.card.info.imageId}`}\n//                                                                 className=\"card-img-top food-pic\"\n//                                                                 alt={item.card.info.name}\n//                                                             />\n//                                                             <div className=\"card-body\">\n//                                                                 <h5 className=\"card-title\">\n//                                                                     {item.card.info.name}\n//                                                                 </h5>\n//                                                                 {item?.card?.info?.ratings?.aggregatedRating\n//                                                                     ?.rating && (\n//                                                                     <p>\n//                                                                         <svg\n//                                                                             xmlns=\"http://www.w3.org/2000/svg\"\n//                                                                             width=\"16\"\n//                                                                             height=\"16\"\n//                                                                             fill=\"currentColor\"\n//                                                                             className=\"bi bi-star-fill\"\n//                                                                             viewBox=\"0 0 16 16\"\n//                                                                         >\n//                                                                             <path\n//                                                                                 d=\"M3.612 15.443c-.386.198-.824-.149-.746-.592l.83-4.73L.173 6.765c-.329-.314-.158-.888.283-.95l4.898-.696L7.538.792c.197-.39.73-.39.927 0l2.184 4.327 4.898.696c.441.062.612.636.282.95l-3.522 3.356.83 4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256z\"\n//                                                                             />\n//                                                                         </svg>\n//                                                                         {' ' +\n//                                                                             item.card.info.ratings\n//                                                                                 .aggregatedRating.rating}\n//                                                                         <span\n//                                                                             style={{ marginLeft: '10px' }}\n//                                                                         >\n//                                                                             {\n//                                                                                 item.card.info.ratings\n//                                                                                     .aggregatedRating\n//                                                                                     .ratingCount\n//                                                                             }\n//                                                                         </span>\n//                                                                         <br />\n//                                                                     </p>\n//                                                                 )}\n//                                                                 <p>\n//                                                                     <b>Price: </b> {price}\n//                                                                 </p>\n//                                                                 <b className=\"card-text\">\n//                                                                     Select your quantity:{' '}\n//                                                                     <input\n//                                                                         type=\"number\"\n//                                                                         className=\"quantity-input\"\n//                                                                         value={quantity}\n//                                                                         min=\"1\"\n//                                                                         onChange={(e) =>\n//                                                                             handleQuantityChange(\n//                                                                                 item.card.info.id,\n//                                                                                 parseInt(e.target.value)\n//                                                                             )\n//                                                                         }\n//                                                                     />\n//                                                                 </b>\n//                                                                 <br />\n//                                                                 <br />\n//                                                                 <div className=\"d-flex justify-content-between align-items-center\">\n//                                                                     <button\n//                                                                         className=\"restaurant-view\"\n//                                                                         onClick={() =>\n//                                                                             dispatch(\n//                                                                                 addToCart({\n//                                                                                     Name: item.card.info.name,\n//                                                                                     Description:\n//                                                                                         item.card.info.description,\n//                                                                                     Price: price,\n//                                                                                     Img: `https://media-assets.swiggy.com/swiggy/image/upload/fl_lossy,f_auto,q_auto,w_600/${item.card.info.imageId}`,\n//                                                                                     Quantity: quantity,\n//                                                                                 })\n//                                                                             )\n//                                                                         }\n//                                                                     >\n//                                                                         Add to Cart\n//                                                                     </button>\n//                                                                 </div>\n//                                                             </div>\n//                                                         </div>\n//                                                     </div>\n//                                                 );\n//                                             })}\n//                                         </div>\n//                                     </div>\n//                                 </div>\n//                             </div>\n//                         );\n//                     }\n//                     return null;\n//                 })}\n//             </div>\n//             <ScrollToTopButton />\n//         </div>\n//     );\n// }\n\n// export default Restaurantspec;","map":{"version":3,"names":[],"sources":["C:/Users/SANTHOSH/React_Applications/swiggy/src/components/restaurantspec.js"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\r\n// import axios from 'axios';\r\n// import { useParams } from 'react-router-dom';\r\n// import '../components/restaurantspec.css';\r\n// import { addToCart } from './reducer';\r\n// import { useDispatch } from 'react-redux';\r\n// import ScrollToTopButton from './scrolltop';\r\n\r\n// function Restaurantspec() {\r\n//     const dispatch = useDispatch();\r\n//     const { restaurantId, restaurantName } = useParams();\r\n//     const [restaurantMenu, setRestaurantMenu] = useState([]);\r\n//     const [openAccordion, setOpenAccordion] = useState(0);\r\n//     const [quantities, setQuantities] = useState({});\r\n\r\n//     useEffect(() => {\r\n//         axios\r\n//             .get(`https://www.swiggy.com/dapi/menu/pl?page-type=REGULAR_MENU&complete-menu=true&lat=17.37240&lng=78.43780&restaurantId=${restaurantId}&catalog_qa=undefined&submitAction=ENTER`)\r\n//             .then((res) => {\r\n//                 setRestaurantMenu(res.data?.data?.cards[4]?.groupedCard?.cardGroupMap?.REGULAR?.cards.slice(1) || []);\r\n//             })\r\n//             .catch((error) => {\r\n//                 console.error('Error fetching restaurant menu:', error);\r\n//             });\r\n//     }, [restaurantId]);\r\n\r\n//     const toggleAccordion = (index) => {\r\n//         setOpenAccordion(openAccordion === index ? null : index);\r\n//     };\r\n\r\n//     const handleQuantityChange = (itemId, quantity) => {\r\n//         setQuantities((prevQuantities) => ({\r\n//             ...prevQuantities,\r\n//             [itemId]: quantity,\r\n//         }));\r\n//     };\r\n\r\n//     return (\r\n//         <div className=\"container\">\r\n//             <h2 className=\"restaurant-title\">{restaurantName} Menu</h2>\r\n//             <div className=\"accordion\" id=\"accordionExample\">\r\n//                 {restaurantMenu.map((item, i) => {\r\n//                     if (item?.card?.card?.itemCards) {\r\n//                         return (\r\n//                             <div className=\"accordion-item\" key={i}>\r\n//                                 <h2 className=\"accordion-header\">\r\n//                                     <button\r\n//                                         className={`accordion-button ${openAccordion === i ? '' : 'collapsed'}`}\r\n//                                         type=\"button\"\r\n//                                         onClick={() => toggleAccordion(i)}\r\n//                                         aria-expanded={openAccordion === i ? 'true' : 'false'}\r\n//                                         aria-controls={`collapse${i}`}\r\n//                                         data-bs-toggle=\"collapse\"\r\n//                                         data-bs-target={`#collapse${i}`}\r\n//                                     >\r\n//                                         <b className=\"category\">\r\n//                                             {item.card.card.title} - {item?.card?.card?.itemCards.length}\r\n//                                         </b>\r\n//                                         <i\r\n//                                             className={`fas ${\r\n//                                                 openAccordion === i ? 'fa-chevron-up' : 'fa-chevron-down'\r\n//                                             } accordion-icon`}\r\n//                                         ></i>\r\n//                                     </button>\r\n//                                 </h2>\r\n//                                 <div\r\n//                                     id={`collapse${i}`}\r\n//                                     className={`accordion-collapse collapse ${openAccordion === i ? 'show' : ''}`}\r\n//                                     aria-labelledby={`heading${i}`}\r\n//                                     data-bs-parent=\"#accordionExample\"\r\n//                                 >\r\n//                                     <div className=\"accordion-body\">\r\n//                                         <div className=\"row row-cols-1 row-cols-md-4 g-2\">\r\n//                                             {item?.card?.card?.itemCards?.map((item, j) => {\r\n//                                                 const quantity = quantities[item.card.info.id] || 1;\r\n//                                                 const price =\r\n//                                                     item.card.info.price !== undefined\r\n//                                                         ? item.card.info.price / 100\r\n//                                                         : item.card.info.defaultPrice !== undefined\r\n//                                                         ? item.card.info.defaultPrice / 100\r\n//                                                         : 'Price not available';\r\n//                                                 return (\r\n//                                                     <div className=\"col\" key={j}>\r\n//                                                         <div className=\"card\">\r\n//                                                             <img\r\n//                                                                 src={`https://media-assets.swiggy.com/swiggy/image/upload/fl_lossy,f_auto,q_auto,w_300,h_300,c_fit/${item.card.info.imageId}`}\r\n//                                                                 className=\"card-img-top food-pic\"\r\n//                                                                 alt={item.card.info.name}\r\n//                                                             />\r\n//                                                             <div className=\"card-body\">\r\n//                                                                 <h5 className=\"card-title\">\r\n//                                                                     {item.card.info.name}\r\n//                                                                 </h5>\r\n//                                                                 {item?.card?.info?.ratings?.aggregatedRating\r\n//                                                                     ?.rating && (\r\n//                                                                     <p>\r\n//                                                                         <svg\r\n//                                                                             xmlns=\"http://www.w3.org/2000/svg\"\r\n//                                                                             width=\"16\"\r\n//                                                                             height=\"16\"\r\n//                                                                             fill=\"currentColor\"\r\n//                                                                             className=\"bi bi-star-fill\"\r\n//                                                                             viewBox=\"0 0 16 16\"\r\n//                                                                         >\r\n//                                                                             <path\r\n//                                                                                 d=\"M3.612 15.443c-.386.198-.824-.149-.746-.592l.83-4.73L.173 6.765c-.329-.314-.158-.888.283-.95l4.898-.696L7.538.792c.197-.39.73-.39.927 0l2.184 4.327 4.898.696c.441.062.612.636.282.95l-3.522 3.356.83 4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256z\"\r\n//                                                                             />\r\n//                                                                         </svg>\r\n//                                                                         {' ' +\r\n//                                                                             item.card.info.ratings\r\n//                                                                                 .aggregatedRating.rating}\r\n//                                                                         <span\r\n//                                                                             style={{ marginLeft: '10px' }}\r\n//                                                                         >\r\n//                                                                             {\r\n//                                                                                 item.card.info.ratings\r\n//                                                                                     .aggregatedRating\r\n//                                                                                     .ratingCount\r\n//                                                                             }\r\n//                                                                         </span>\r\n//                                                                         <br />\r\n//                                                                     </p>\r\n//                                                                 )}\r\n//                                                                 <p>\r\n//                                                                     <b>Price: </b> {price}\r\n//                                                                 </p>\r\n//                                                                 <b className=\"card-text\">\r\n//                                                                     Select your quantity:{' '}\r\n//                                                                     <input\r\n//                                                                         type=\"number\"\r\n//                                                                         className=\"quantity-input\"\r\n//                                                                         value={quantity}\r\n//                                                                         min=\"1\"\r\n//                                                                         onChange={(e) =>\r\n//                                                                             handleQuantityChange(\r\n//                                                                                 item.card.info.id,\r\n//                                                                                 parseInt(e.target.value)\r\n//                                                                             )\r\n//                                                                         }\r\n//                                                                     />\r\n//                                                                 </b>\r\n//                                                                 <br />\r\n//                                                                 <br />\r\n//                                                                 <div className=\"d-flex justify-content-between align-items-center\">\r\n//                                                                     <button\r\n//                                                                         className=\"restaurant-view\"\r\n//                                                                         onClick={() =>\r\n//                                                                             dispatch(\r\n//                                                                                 addToCart({\r\n//                                                                                     Name: item.card.info.name,\r\n//                                                                                     Description:\r\n//                                                                                         item.card.info.description,\r\n//                                                                                     Price: price,\r\n//                                                                                     Img: `https://media-assets.swiggy.com/swiggy/image/upload/fl_lossy,f_auto,q_auto,w_600/${item.card.info.imageId}`,\r\n//                                                                                     Quantity: quantity,\r\n//                                                                                 })\r\n//                                                                             )\r\n//                                                                         }\r\n//                                                                     >\r\n//                                                                         Add to Cart\r\n//                                                                     </button>\r\n//                                                                 </div>\r\n//                                                             </div>\r\n//                                                         </div>\r\n//                                                     </div>\r\n//                                                 );\r\n//                                             })}\r\n//                                         </div>\r\n//                                     </div>\r\n//                                 </div>\r\n//                             </div>\r\n//                         );\r\n//                     }\r\n//                     return null;\r\n//                 })}\r\n//             </div>\r\n//             <ScrollToTopButton />\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default Restaurantspec;\r\n\r\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"// import { createSlice } from \"@reduxjs/toolkit\";\n\n// let initialState = {\n//     cartItems : []\n// }\n\n// let slice = createSlice({\n//     name : \"cart\",\n//     initialState : initialState,\n//     reducers :{\n//         addToCart : (state , action)=>{\n//             state.cartItems.push(action.payload)\n//         },\n\n//         removeFromCart : (state , action)=>{\n//             state.cartItems.splice(action.payload , 1)\n//         }\n//     }\n// })\n\n// export const {addToCart , removeFromCart} = slice.actions\n// export default slice.reducer;\n\nimport { createSlice } from \"@reduxjs/toolkit\";\nlet initialState = {\n  cartItems: []\n};\nlet slice = createSlice({\n  name: \"cart\",\n  initialState: initialState,\n  reducers: {\n    addToCart: (state, action) => {\n      state.cartItems.push(action.payload);\n    },\n    removeFromCart: (state, action) => {\n      var _state$cartItems$inde;\n      const {\n        index,\n        quantity\n      } = action.payload;\n      const currentQuantity = ((_state$cartItems$inde = state.cartItems[index]) === null || _state$cartItems$inde === void 0 ? void 0 : _state$cartItems$inde.Quantity) || 0;\n      if (quantity >= currentQuantity) {\n        state.cartItems.splice(index, 1);\n      } else {\n        state.cartItems[index].Quantity -= quantity;\n      }\n    },\n    updateQuantity: (state, action) => {\n      const {\n        index,\n        quantity\n      } = action.payload;\n      state.cartItems[index].Quantity = quantity;\n    }\n  }\n});\nexport const {\n  addToCart,\n  removeFromCart,\n  updateQuantity\n} = slice.actions;\nexport default slice.reducer;","map":{"version":3,"names":["createSlice","initialState","cartItems","slice","name","reducers","addToCart","state","action","push","payload","removeFromCart","_state$cartItems$inde","index","quantity","currentQuantity","Quantity","splice","updateQuantity","actions","reducer"],"sources":["C:/Users/SANTHOSH/React_Applications/swiggy/src/components/reducer.js"],"sourcesContent":["    // import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n\r\n    // let initialState = {\r\n    //     cartItems : []\r\n    // }\r\n\r\n    // let slice = createSlice({\r\n    //     name : \"cart\",\r\n    //     initialState : initialState,\r\n    //     reducers :{\r\n    //         addToCart : (state , action)=>{\r\n    //             state.cartItems.push(action.payload)\r\n    //         },\r\n\r\n    //         removeFromCart : (state , action)=>{\r\n    //             state.cartItems.splice(action.payload , 1)\r\n    //         }\r\n    //     }\r\n    // })\r\n\r\n    // export const {addToCart , removeFromCart} = slice.actions\r\n    // export default slice.reducer;\r\n\r\n\r\n    import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n    let initialState = {\r\n        cartItems: []\r\n    }\r\n    \r\n    let slice = createSlice({\r\n        name: \"cart\",\r\n        initialState: initialState,\r\n        reducers: {\r\n            addToCart: (state, action) => {\r\n                state.cartItems.push(action.payload);\r\n            },\r\n    \r\n            removeFromCart: (state, action) => {\r\n                const { index, quantity } = action.payload;\r\n                const currentQuantity = state.cartItems[index]?.Quantity || 0;\r\n                if (quantity >= currentQuantity) {\r\n                    state.cartItems.splice(index, 1);\r\n                } else {\r\n                    state.cartItems[index].Quantity -= quantity;\r\n                }\r\n            },\r\n    \r\n            updateQuantity: (state, action) => {\r\n                const { index, quantity } = action.payload;\r\n                state.cartItems[index].Quantity = quantity;\r\n            }\r\n        }\r\n    });\r\n    \r\n    export const { addToCart, removeFromCart, updateQuantity } = slice.actions;\r\n    export default slice.reducer;\r\n    "],"mappings":"AAAI;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAGA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,IAAIC,YAAY,GAAG;EACfC,SAAS,EAAE;AACf,CAAC;AAED,IAAIC,KAAK,GAAGH,WAAW,CAAC;EACpBI,IAAI,EAAE,MAAM;EACZH,YAAY,EAAEA,YAAY;EAC1BI,QAAQ,EAAE;IACNC,SAAS,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC1BD,KAAK,CAACL,SAAS,CAACO,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC;IACxC,CAAC;IAEDC,cAAc,EAAEA,CAACJ,KAAK,EAAEC,MAAM,KAAK;MAAA,IAAAI,qBAAA;MAC/B,MAAM;QAAEC,KAAK;QAAEC;MAAS,CAAC,GAAGN,MAAM,CAACE,OAAO;MAC1C,MAAMK,eAAe,GAAG,EAAAH,qBAAA,GAAAL,KAAK,CAACL,SAAS,CAACW,KAAK,CAAC,cAAAD,qBAAA,uBAAtBA,qBAAA,CAAwBI,QAAQ,KAAI,CAAC;MAC7D,IAAIF,QAAQ,IAAIC,eAAe,EAAE;QAC7BR,KAAK,CAACL,SAAS,CAACe,MAAM,CAACJ,KAAK,EAAE,CAAC,CAAC;MACpC,CAAC,MAAM;QACHN,KAAK,CAACL,SAAS,CAACW,KAAK,CAAC,CAACG,QAAQ,IAAIF,QAAQ;MAC/C;IACJ,CAAC;IAEDI,cAAc,EAAEA,CAACX,KAAK,EAAEC,MAAM,KAAK;MAC/B,MAAM;QAAEK,KAAK;QAAEC;MAAS,CAAC,GAAGN,MAAM,CAACE,OAAO;MAC1CH,KAAK,CAACL,SAAS,CAACW,KAAK,CAAC,CAACG,QAAQ,GAAGF,QAAQ;IAC9C;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAER,SAAS;EAAEK,cAAc;EAAEO;AAAe,CAAC,GAAGf,KAAK,CAACgB,OAAO;AAC1E,eAAehB,KAAK,CAACiB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
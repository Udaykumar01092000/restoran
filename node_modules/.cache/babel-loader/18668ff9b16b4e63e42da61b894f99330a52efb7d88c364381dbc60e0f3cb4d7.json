{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SANTHOSH\\\\React_Applications\\\\swiggy\\\\src\\\\components\\\\restaurantspec.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from 'react';\n// import axios from 'axios';\n// import { useParams } from 'react-router-dom';\n// import '../components/restaurantspec.css';\n// import { addToCart } from './reducer';\n// import { useDispatch } from 'react-redux';\n// import ScrollToTopButton from './scrolltop';\n\n// function Restaurantspec() {\n//     const dispatch = useDispatch();\n//     const { restaurantId, restaurantName } = useParams();\n//     const [restaurantMenu, setRestaurantMenu] = useState([]);\n//     const [openAccordion, setOpenAccordion] = useState(0);\n//     const [quantities, setQuantities] = useState({});\n\n//     useEffect(() => {\n//         axios\n//             .get(`https://www.swiggy.com/dapi/menu/pl?page-type=REGULAR_MENU&complete-menu=true&lat=17.37240&lng=78.43780&restaurantId=${restaurantId}&catalog_qa=undefined&submitAction=ENTER`)\n//             .then((res) => {\n//                 setRestaurantMenu(res.data?.data?.cards[4]?.groupedCard?.cardGroupMap?.REGULAR?.cards.slice(1) || []);\n//             })\n//             .catch((error) => {\n//                 console.error('Error fetching restaurant menu:', error);\n//             });\n//     }, [restaurantId]);\n\n//     const toggleAccordion = (index) => {\n//         setOpenAccordion(openAccordion === index ? null : index);\n//     };\n\n//     const handleQuantityChange = (itemId, quantity) => {\n//         setQuantities((prevQuantities) => ({\n//             ...prevQuantities,\n//             [itemId]: quantity,\n//         }));\n//     };\n\n//     return (\n//         <div className=\"container\">\n//             <h2 className=\"restaurant-title\">{restaurantName} Menu</h2>\n//             <div className=\"accordion\" id=\"accordionExample\">\n//                 {restaurantMenu.map((item, i) => {\n//                     if (item?.card?.card?.itemCards) {\n//                         return (\n//                             <div className=\"accordion-item\" key={i}>\n//                                 <h2 className=\"accordion-header\">\n//                                     <button\n//                                         className={`accordion-button ${openAccordion === i ? '' : 'collapsed'}`}\n//                                         type=\"button\"\n//                                         onClick={() => toggleAccordion(i)}\n//                                         aria-expanded={openAccordion === i ? 'true' : 'false'}\n//                                         aria-controls={`collapse${i}`}\n//                                         data-bs-toggle=\"collapse\"\n//                                         data-bs-target={`#collapse${i}`}\n//                                     >\n//                                         <b className=\"category\">\n//                                             {item.card.card.title} - {item?.card?.card?.itemCards.length}\n//                                         </b>\n//                                         <i\n//                                             className={`fas ${\n//                                                 openAccordion === i ? 'fa-chevron-up' : 'fa-chevron-down'\n//                                             } accordion-icon`}\n//                                         ></i>\n//                                     </button>\n//                                 </h2>\n//                                 <div\n//                                     id={`collapse${i}`}\n//                                     className={`accordion-collapse collapse ${openAccordion === i ? 'show' : ''}`}\n//                                     aria-labelledby={`heading${i}`}\n//                                     data-bs-parent=\"#accordionExample\"\n//                                 >\n//                                     <div className=\"accordion-body\">\n//                                         <div className=\"row row-cols-1 row-cols-md-4 g-2\">\n//                                             {item?.card?.card?.itemCards?.map((item, j) => {\n//                                                 const quantity = quantities[item.card.info.id] || 1;\n//                                                 const price =\n//                                                     item.card.info.price !== undefined\n//                                                         ? item.card.info.price / 100\n//                                                         : item.card.info.defaultPrice !== undefined\n//                                                         ? item.card.info.defaultPrice / 100\n//                                                         : 'Price not available';\n//                                                 return (\n//                                                     <div className=\"col\" key={j}>\n//                                                         <div className=\"card\">\n//                                                             <img\n//                                                                 src={`https://media-assets.swiggy.com/swiggy/image/upload/fl_lossy,f_auto,q_auto,w_300,h_300,c_fit/${item.card.info.imageId}`}\n//                                                                 className=\"card-img-top food-pic\"\n//                                                                 alt={item.card.info.name}\n//                                                             />\n//                                                             <div className=\"card-body\">\n//                                                                 <h5 className=\"card-title\">\n//                                                                     {item.card.info.name}\n//                                                                 </h5>\n//                                                                 {item?.card?.info?.ratings?.aggregatedRating\n//                                                                     ?.rating && (\n//                                                                     <p>\n//                                                                         <svg\n//                                                                             xmlns=\"http://www.w3.org/2000/svg\"\n//                                                                             width=\"16\"\n//                                                                             height=\"16\"\n//                                                                             fill=\"currentColor\"\n//                                                                             className=\"bi bi-star-fill\"\n//                                                                             viewBox=\"0 0 16 16\"\n//                                                                         >\n//                                                                             <path\n//                                                                                 d=\"M3.612 15.443c-.386.198-.824-.149-.746-.592l.83-4.73L.173 6.765c-.329-.314-.158-.888.283-.95l4.898-.696L7.538.792c.197-.39.73-.39.927 0l2.184 4.327 4.898.696c.441.062.612.636.282.95l-3.522 3.356.83 4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256z\"\n//                                                                             />\n//                                                                         </svg>\n//                                                                         {' ' +\n//                                                                             item.card.info.ratings\n//                                                                                 .aggregatedRating.rating}\n//                                                                         <span\n//                                                                             style={{ marginLeft: '10px' }}\n//                                                                         >\n//                                                                             {\n//                                                                                 item.card.info.ratings\n//                                                                                     .aggregatedRating\n//                                                                                     .ratingCount\n//                                                                             }\n//                                                                         </span>\n//                                                                         <br />\n//                                                                     </p>\n//                                                                 )}\n//                                                                 <p>\n//                                                                     <b>Price: </b> {price}\n//                                                                 </p>\n//                                                                 <b className=\"card-text\">\n//                                                                     Select your quantity:{' '}\n//                                                                     <input\n//                                                                         type=\"number\"\n//                                                                         className=\"quantity-input\"\n//                                                                         value={quantity}\n//                                                                         min=\"1\"\n//                                                                         onChange={(e) =>\n//                                                                             handleQuantityChange(\n//                                                                                 item.card.info.id,\n//                                                                                 parseInt(e.target.value)\n//                                                                             )\n//                                                                         }\n//                                                                     />\n//                                                                 </b>\n//                                                                 <br />\n//                                                                 <br />\n//                                                                 <div className=\"d-flex justify-content-between align-items-center\">\n//                                                                     <button\n//                                                                         className=\"restaurant-view\"\n//                                                                         onClick={() =>\n//                                                                             dispatch(\n//                                                                                 addToCart({\n//                                                                                     Name: item.card.info.name,\n//                                                                                     Description:\n//                                                                                         item.card.info.description,\n//                                                                                     Price: price,\n//                                                                                     Img: `https://media-assets.swiggy.com/swiggy/image/upload/fl_lossy,f_auto,q_auto,w_600/${item.card.info.imageId}`,\n//                                                                                     Quantity: quantity,\n//                                                                                 })\n//                                                                             )\n//                                                                         }\n//                                                                     >\n//                                                                         Add to Cart\n//                                                                     </button>\n//                                                                 </div>\n//                                                             </div>\n//                                                         </div>\n//                                                     </div>\n//                                                 );\n//                                             })}\n//                                         </div>\n//                                     </div>\n//                                 </div>\n//                             </div>\n//                         );\n//                     }\n//                     return null;\n//                 })}\n//             </div>\n//             <ScrollToTopButton />\n//         </div>\n//     );\n// }\n\n// export default Restaurantspec;\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport '../components/restaurantspec.css';\nimport { addToCart } from './reducer';\nimport { useDispatch } from 'react-redux';\nimport ScrollToTopButton from './scrolltop';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Restaurantspec() {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    restaurantId,\n    restaurantName\n  } = useParams();\n  const [restaurantMenu, setRestaurantMenu] = useState([]);\n  const [openAccordion, setOpenAccordion] = useState(0);\n  const [quantities, setQuantities] = useState({});\n  useEffect(() => {\n    axios.get(`https://www.swiggy.com/dapi/menu/pl?page-type=REGULAR_MENU&complete-menu=true&lat=17.37240&lng=78.43780&restaurantId=${restaurantId}&catalog_qa=undefined&submitAction=ENTER`).then(res => {\n      var _res$data, _res$data$data, _res$data$data$cards$, _res$data$data$cards$2, _res$data$data$cards$3, _res$data$data$cards$4;\n      setRestaurantMenu(((_res$data = res.data) === null || _res$data === void 0 ? void 0 : (_res$data$data = _res$data.data) === null || _res$data$data === void 0 ? void 0 : (_res$data$data$cards$ = _res$data$data.cards[4]) === null || _res$data$data$cards$ === void 0 ? void 0 : (_res$data$data$cards$2 = _res$data$data$cards$.groupedCard) === null || _res$data$data$cards$2 === void 0 ? void 0 : (_res$data$data$cards$3 = _res$data$data$cards$2.cardGroupMap) === null || _res$data$data$cards$3 === void 0 ? void 0 : (_res$data$data$cards$4 = _res$data$data$cards$3.REGULAR) === null || _res$data$data$cards$4 === void 0 ? void 0 : _res$data$data$cards$4.cards.slice(1)) || []);\n    }).catch(error => {\n      console.error('Error fetching restaurant menu:', error);\n    });\n  }, [restaurantId]);\n  const toggleAccordion = index => {\n    setOpenAccordion(openAccordion === index ? null : index);\n  };\n  const handleQuantityChange = (itemId, quantity) => {\n    setQuantities(prevQuantities => ({\n      ...prevQuantities,\n      [itemId]: quantity\n    }));\n  };\n  const handleAddToCart = (item, quantity) => {\n    dispatch(addToCart({\n      Name: item.card.info.name,\n      Description: item.card.info.description,\n      Price: item.card.info.price / 100,\n      Img: `https://media-assets.swiggy.com/swiggy/image/upload/fl_lossy,f_auto,q_auto,w_600/${item.card.info.imageId}`,\n      Quantity: quantity,\n      RestaurantName: restaurantName // Pass RestaurantName here\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"restaurant-title\",\n      children: [restaurantName, \" Menu\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"accordion\",\n      id: \"accordionExample\",\n      children: restaurantMenu.map((item, i) => {\n        var _item$card, _item$card$card;\n        if (item !== null && item !== void 0 && (_item$card = item.card) !== null && _item$card !== void 0 && (_item$card$card = _item$card.card) !== null && _item$card$card !== void 0 && _item$card$card.itemCards) {\n          var _item$card2, _item$card2$card, _item$card3, _item$card3$card, _item$card3$card$item;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"accordion-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"accordion-header\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: `accordion-button ${openAccordion === i ? '' : 'collapsed'}`,\n                type: \"button\",\n                onClick: () => toggleAccordion(i),\n                \"aria-expanded\": openAccordion === i ? 'true' : 'false',\n                \"aria-controls\": `collapse${i}`,\n                \"data-bs-toggle\": \"collapse\",\n                \"data-bs-target\": `#collapse${i}`,\n                children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                  className: \"category\",\n                  children: [item.card.card.title, \" - \", item === null || item === void 0 ? void 0 : (_item$card2 = item.card) === null || _item$card2 === void 0 ? void 0 : (_item$card2$card = _item$card2.card) === null || _item$card2$card === void 0 ? void 0 : _item$card2$card.itemCards.length]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 252,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: `fas ${openAccordion === i ? 'fa-chevron-up' : 'fa-chevron-down'} accordion-icon`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 255,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: `collapse${i}`,\n              className: `accordion-collapse collapse ${openAccordion === i ? 'show' : ''}`,\n              \"aria-labelledby\": `heading${i}`,\n              \"data-bs-parent\": \"#accordionExample\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"accordion-body\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"row row-cols-1 row-cols-md-4 g-2\",\n                  children: item === null || item === void 0 ? void 0 : (_item$card3 = item.card) === null || _item$card3 === void 0 ? void 0 : (_item$card3$card = _item$card3.card) === null || _item$card3$card === void 0 ? void 0 : (_item$card3$card$item = _item$card3$card.itemCards) === null || _item$card3$card$item === void 0 ? void 0 : _item$card3$card$item.map((item, j) => {\n                    const quantity = quantities[item.card.info.id] || 1;\n                    return /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"col\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"card\",\n                        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                          src: `https://media-assets.swiggy.com/swiggy/image/upload/fl_lossy,f_auto,q_auto,w_300,h_300,c_fit/${item.card.info.imageId}`,\n                          className: \"card-img-top food-pic\",\n                          alt: item.card.info.name\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 275,\n                          columnNumber: 61\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"card-body\",\n                          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                            className: \"card-title\",\n                            children: item.card.info.name\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 281,\n                            columnNumber: 65\n                          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                              children: \"Price: \"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 285,\n                              columnNumber: 69\n                            }, this), \" \", item.card.info.price / 100]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 284,\n                            columnNumber: 65\n                          }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n                            className: \"card-text\",\n                            children: [\"Select your quantity:\", ' ', /*#__PURE__*/_jsxDEV(\"input\", {\n                              type: \"number\",\n                              className: \"quantity-input\",\n                              value: quantity,\n                              min: \"1\",\n                              onChange: e => handleQuantityChange(item.card.info.id, parseInt(e.target.value))\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 289,\n                              columnNumber: 69\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 287,\n                            columnNumber: 65\n                          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 302,\n                            columnNumber: 65\n                          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 303,\n                            columnNumber: 65\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"d-flex justify-content-between align-items-center\",\n                            children: /*#__PURE__*/_jsxDEV(\"button\", {\n                              className: \"restaurant-view\",\n                              onClick: () => handleAddToCart(item, quantity),\n                              children: \"Add to Cart\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 305,\n                              columnNumber: 69\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 304,\n                            columnNumber: 65\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 280,\n                          columnNumber: 61\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 274,\n                        columnNumber: 57\n                      }, this)\n                    }, j, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 273,\n                      columnNumber: 53\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 269,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 33\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 29\n          }, this);\n        }\n        return null;\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ScrollToTopButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 235,\n    columnNumber: 9\n  }, this);\n}\n_s(Restaurantspec, \"J/rDxagAKjXSly4cGVji+LK5SKo=\", false, function () {\n  return [useDispatch, useParams];\n});\n_c = Restaurantspec;\nexport default Restaurantspec;\nvar _c;\n$RefreshReg$(_c, \"Restaurantspec\");","map":{"version":3,"names":["React","useEffect","useState","axios","useParams","addToCart","useDispatch","ScrollToTopButton","jsxDEV","_jsxDEV","Restaurantspec","_s","dispatch","restaurantId","restaurantName","restaurantMenu","setRestaurantMenu","openAccordion","setOpenAccordion","quantities","setQuantities","get","then","res","_res$data","_res$data$data","_res$data$data$cards$","_res$data$data$cards$2","_res$data$data$cards$3","_res$data$data$cards$4","data","cards","groupedCard","cardGroupMap","REGULAR","slice","catch","error","console","toggleAccordion","index","handleQuantityChange","itemId","quantity","prevQuantities","handleAddToCart","item","Name","card","info","name","Description","description","Price","price","Img","imageId","Quantity","RestaurantName","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","map","i","_item$card","_item$card$card","itemCards","_item$card2","_item$card2$card","_item$card3","_item$card3$card","_item$card3$card$item","type","onClick","title","length","j","src","alt","value","min","onChange","e","parseInt","target","_c","$RefreshReg$"],"sources":["C:/Users/SANTHOSH/React_Applications/swiggy/src/components/restaurantspec.js"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\r\n// import axios from 'axios';\r\n// import { useParams } from 'react-router-dom';\r\n// import '../components/restaurantspec.css';\r\n// import { addToCart } from './reducer';\r\n// import { useDispatch } from 'react-redux';\r\n// import ScrollToTopButton from './scrolltop';\r\n\r\n// function Restaurantspec() {\r\n//     const dispatch = useDispatch();\r\n//     const { restaurantId, restaurantName } = useParams();\r\n//     const [restaurantMenu, setRestaurantMenu] = useState([]);\r\n//     const [openAccordion, setOpenAccordion] = useState(0);\r\n//     const [quantities, setQuantities] = useState({});\r\n\r\n//     useEffect(() => {\r\n//         axios\r\n//             .get(`https://www.swiggy.com/dapi/menu/pl?page-type=REGULAR_MENU&complete-menu=true&lat=17.37240&lng=78.43780&restaurantId=${restaurantId}&catalog_qa=undefined&submitAction=ENTER`)\r\n//             .then((res) => {\r\n//                 setRestaurantMenu(res.data?.data?.cards[4]?.groupedCard?.cardGroupMap?.REGULAR?.cards.slice(1) || []);\r\n//             })\r\n//             .catch((error) => {\r\n//                 console.error('Error fetching restaurant menu:', error);\r\n//             });\r\n//     }, [restaurantId]);\r\n\r\n//     const toggleAccordion = (index) => {\r\n//         setOpenAccordion(openAccordion === index ? null : index);\r\n//     };\r\n\r\n//     const handleQuantityChange = (itemId, quantity) => {\r\n//         setQuantities((prevQuantities) => ({\r\n//             ...prevQuantities,\r\n//             [itemId]: quantity,\r\n//         }));\r\n//     };\r\n\r\n//     return (\r\n//         <div className=\"container\">\r\n//             <h2 className=\"restaurant-title\">{restaurantName} Menu</h2>\r\n//             <div className=\"accordion\" id=\"accordionExample\">\r\n//                 {restaurantMenu.map((item, i) => {\r\n//                     if (item?.card?.card?.itemCards) {\r\n//                         return (\r\n//                             <div className=\"accordion-item\" key={i}>\r\n//                                 <h2 className=\"accordion-header\">\r\n//                                     <button\r\n//                                         className={`accordion-button ${openAccordion === i ? '' : 'collapsed'}`}\r\n//                                         type=\"button\"\r\n//                                         onClick={() => toggleAccordion(i)}\r\n//                                         aria-expanded={openAccordion === i ? 'true' : 'false'}\r\n//                                         aria-controls={`collapse${i}`}\r\n//                                         data-bs-toggle=\"collapse\"\r\n//                                         data-bs-target={`#collapse${i}`}\r\n//                                     >\r\n//                                         <b className=\"category\">\r\n//                                             {item.card.card.title} - {item?.card?.card?.itemCards.length}\r\n//                                         </b>\r\n//                                         <i\r\n//                                             className={`fas ${\r\n//                                                 openAccordion === i ? 'fa-chevron-up' : 'fa-chevron-down'\r\n//                                             } accordion-icon`}\r\n//                                         ></i>\r\n//                                     </button>\r\n//                                 </h2>\r\n//                                 <div\r\n//                                     id={`collapse${i}`}\r\n//                                     className={`accordion-collapse collapse ${openAccordion === i ? 'show' : ''}`}\r\n//                                     aria-labelledby={`heading${i}`}\r\n//                                     data-bs-parent=\"#accordionExample\"\r\n//                                 >\r\n//                                     <div className=\"accordion-body\">\r\n//                                         <div className=\"row row-cols-1 row-cols-md-4 g-2\">\r\n//                                             {item?.card?.card?.itemCards?.map((item, j) => {\r\n//                                                 const quantity = quantities[item.card.info.id] || 1;\r\n//                                                 const price =\r\n//                                                     item.card.info.price !== undefined\r\n//                                                         ? item.card.info.price / 100\r\n//                                                         : item.card.info.defaultPrice !== undefined\r\n//                                                         ? item.card.info.defaultPrice / 100\r\n//                                                         : 'Price not available';\r\n//                                                 return (\r\n//                                                     <div className=\"col\" key={j}>\r\n//                                                         <div className=\"card\">\r\n//                                                             <img\r\n//                                                                 src={`https://media-assets.swiggy.com/swiggy/image/upload/fl_lossy,f_auto,q_auto,w_300,h_300,c_fit/${item.card.info.imageId}`}\r\n//                                                                 className=\"card-img-top food-pic\"\r\n//                                                                 alt={item.card.info.name}\r\n//                                                             />\r\n//                                                             <div className=\"card-body\">\r\n//                                                                 <h5 className=\"card-title\">\r\n//                                                                     {item.card.info.name}\r\n//                                                                 </h5>\r\n//                                                                 {item?.card?.info?.ratings?.aggregatedRating\r\n//                                                                     ?.rating && (\r\n//                                                                     <p>\r\n//                                                                         <svg\r\n//                                                                             xmlns=\"http://www.w3.org/2000/svg\"\r\n//                                                                             width=\"16\"\r\n//                                                                             height=\"16\"\r\n//                                                                             fill=\"currentColor\"\r\n//                                                                             className=\"bi bi-star-fill\"\r\n//                                                                             viewBox=\"0 0 16 16\"\r\n//                                                                         >\r\n//                                                                             <path\r\n//                                                                                 d=\"M3.612 15.443c-.386.198-.824-.149-.746-.592l.83-4.73L.173 6.765c-.329-.314-.158-.888.283-.95l4.898-.696L7.538.792c.197-.39.73-.39.927 0l2.184 4.327 4.898.696c.441.062.612.636.282.95l-3.522 3.356.83 4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256z\"\r\n//                                                                             />\r\n//                                                                         </svg>\r\n//                                                                         {' ' +\r\n//                                                                             item.card.info.ratings\r\n//                                                                                 .aggregatedRating.rating}\r\n//                                                                         <span\r\n//                                                                             style={{ marginLeft: '10px' }}\r\n//                                                                         >\r\n//                                                                             {\r\n//                                                                                 item.card.info.ratings\r\n//                                                                                     .aggregatedRating\r\n//                                                                                     .ratingCount\r\n//                                                                             }\r\n//                                                                         </span>\r\n//                                                                         <br />\r\n//                                                                     </p>\r\n//                                                                 )}\r\n//                                                                 <p>\r\n//                                                                     <b>Price: </b> {price}\r\n//                                                                 </p>\r\n//                                                                 <b className=\"card-text\">\r\n//                                                                     Select your quantity:{' '}\r\n//                                                                     <input\r\n//                                                                         type=\"number\"\r\n//                                                                         className=\"quantity-input\"\r\n//                                                                         value={quantity}\r\n//                                                                         min=\"1\"\r\n//                                                                         onChange={(e) =>\r\n//                                                                             handleQuantityChange(\r\n//                                                                                 item.card.info.id,\r\n//                                                                                 parseInt(e.target.value)\r\n//                                                                             )\r\n//                                                                         }\r\n//                                                                     />\r\n//                                                                 </b>\r\n//                                                                 <br />\r\n//                                                                 <br />\r\n//                                                                 <div className=\"d-flex justify-content-between align-items-center\">\r\n//                                                                     <button\r\n//                                                                         className=\"restaurant-view\"\r\n//                                                                         onClick={() =>\r\n//                                                                             dispatch(\r\n//                                                                                 addToCart({\r\n//                                                                                     Name: item.card.info.name,\r\n//                                                                                     Description:\r\n//                                                                                         item.card.info.description,\r\n//                                                                                     Price: price,\r\n//                                                                                     Img: `https://media-assets.swiggy.com/swiggy/image/upload/fl_lossy,f_auto,q_auto,w_600/${item.card.info.imageId}`,\r\n//                                                                                     Quantity: quantity,\r\n//                                                                                 })\r\n//                                                                             )\r\n//                                                                         }\r\n//                                                                     >\r\n//                                                                         Add to Cart\r\n//                                                                     </button>\r\n//                                                                 </div>\r\n//                                                             </div>\r\n//                                                         </div>\r\n//                                                     </div>\r\n//                                                 );\r\n//                                             })}\r\n//                                         </div>\r\n//                                     </div>\r\n//                                 </div>\r\n//                             </div>\r\n//                         );\r\n//                     }\r\n//                     return null;\r\n//                 })}\r\n//             </div>\r\n//             <ScrollToTopButton />\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default Restaurantspec;\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams } from 'react-router-dom';\r\nimport '../components/restaurantspec.css';\r\nimport { addToCart } from './reducer';\r\nimport { useDispatch } from 'react-redux';\r\nimport ScrollToTopButton from './scrolltop';\r\n\r\nfunction Restaurantspec() {\r\n    const dispatch = useDispatch();\r\n    const { restaurantId, restaurantName } = useParams();\r\n    const [restaurantMenu, setRestaurantMenu] = useState([]);\r\n    const [openAccordion, setOpenAccordion] = useState(0);\r\n    const [quantities, setQuantities] = useState({});\r\n\r\n    useEffect(() => {\r\n        axios\r\n            .get(`https://www.swiggy.com/dapi/menu/pl?page-type=REGULAR_MENU&complete-menu=true&lat=17.37240&lng=78.43780&restaurantId=${restaurantId}&catalog_qa=undefined&submitAction=ENTER`)\r\n            .then((res) => {\r\n                setRestaurantMenu(res.data?.data?.cards[4]?.groupedCard?.cardGroupMap?.REGULAR?.cards.slice(1) || []);\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error fetching restaurant menu:', error);\r\n            });\r\n    }, [restaurantId]);\r\n\r\n    const toggleAccordion = (index) => {\r\n        setOpenAccordion(openAccordion === index ? null : index);\r\n    };\r\n\r\n    const handleQuantityChange = (itemId, quantity) => {\r\n        setQuantities((prevQuantities) => ({\r\n            ...prevQuantities,\r\n            [itemId]: quantity,\r\n        }));\r\n    };\r\n\r\n    const handleAddToCart = (item, quantity) => {\r\n        dispatch(\r\n            addToCart({\r\n                Name: item.card.info.name,\r\n                Description: item.card.info.description,\r\n                Price: item.card.info.price / 100,\r\n                Img: `https://media-assets.swiggy.com/swiggy/image/upload/fl_lossy,f_auto,q_auto,w_600/${item.card.info.imageId}`,\r\n                Quantity: quantity,\r\n                RestaurantName: restaurantName  // Pass RestaurantName here\r\n            })\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h2 className=\"restaurant-title\">{restaurantName} Menu</h2>\r\n            <div className=\"accordion\" id=\"accordionExample\">\r\n                {restaurantMenu.map((item, i) => {\r\n                    if (item?.card?.card?.itemCards) {\r\n                        return (\r\n                            <div className=\"accordion-item\" key={i}>\r\n                                <h2 className=\"accordion-header\">\r\n                                    <button\r\n                                        className={`accordion-button ${openAccordion === i ? '' : 'collapsed'}`}\r\n                                        type=\"button\"\r\n                                        onClick={() => toggleAccordion(i)}\r\n                                        aria-expanded={openAccordion === i ? 'true' : 'false'}\r\n                                        aria-controls={`collapse${i}`}\r\n                                        data-bs-toggle=\"collapse\"\r\n                                        data-bs-target={`#collapse${i}`}\r\n                                    >\r\n                                        <b className=\"category\">\r\n                                            {item.card.card.title} - {item?.card?.card?.itemCards.length}\r\n                                        </b>\r\n                                        <i\r\n                                            className={`fas ${\r\n                                                openAccordion === i ? 'fa-chevron-up' : 'fa-chevron-down'\r\n                                            } accordion-icon`}\r\n                                        ></i>\r\n                                    </button>\r\n                                </h2>\r\n                                <div\r\n                                    id={`collapse${i}`}\r\n                                    className={`accordion-collapse collapse ${openAccordion === i ? 'show' : ''}`}\r\n                                    aria-labelledby={`heading${i}`}\r\n                                    data-bs-parent=\"#accordionExample\"\r\n                                >\r\n                                    <div className=\"accordion-body\">\r\n                                        <div className=\"row row-cols-1 row-cols-md-4 g-2\">\r\n                                            {item?.card?.card?.itemCards?.map((item, j) => {\r\n                                                const quantity = quantities[item.card.info.id] || 1;\r\n                                                return (\r\n                                                    <div className=\"col\" key={j}>\r\n                                                        <div className=\"card\">\r\n                                                            <img\r\n                                                                src={`https://media-assets.swiggy.com/swiggy/image/upload/fl_lossy,f_auto,q_auto,w_300,h_300,c_fit/${item.card.info.imageId}`}\r\n                                                                className=\"card-img-top food-pic\"\r\n                                                                alt={item.card.info.name}\r\n                                                            />\r\n                                                            <div className=\"card-body\">\r\n                                                                <h5 className=\"card-title\">\r\n                                                                    {item.card.info.name}\r\n                                                                </h5>\r\n                                                                <p>\r\n                                                                    <b>Price: </b> {item.card.info.price / 100}\r\n                                                                </p>\r\n                                                                <b className=\"card-text\">\r\n                                                                    Select your quantity:{' '}\r\n                                                                    <input\r\n                                                                        type=\"number\"\r\n                                                                        className=\"quantity-input\"\r\n                                                                        value={quantity}\r\n                                                                        min=\"1\"\r\n                                                                        onChange={(e) =>\r\n                                                                            handleQuantityChange(\r\n                                                                                item.card.info.id,\r\n                                                                                parseInt(e.target.value)\r\n                                                                            )\r\n                                                                        }\r\n                                                                    />\r\n                                                                </b>\r\n                                                                <br />\r\n                                                                <br />\r\n                                                                <div className=\"d-flex justify-content-between align-items-center\">\r\n                                                                    <button\r\n                                                                        className=\"restaurant-view\"\r\n                                                                        onClick={() =>\r\n                                                                            handleAddToCart(item, quantity)\r\n                                                                        }\r\n                                                                    >\r\n                                                                        Add to Cart\r\n                                                                    </button>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                );\r\n                                            })}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    }\r\n                    return null;\r\n                })}\r\n            </div>\r\n            <ScrollToTopButton />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Restaurantspec;\r\n"],"mappingslD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAO,kCAAkC;AACzC,SAASC,SAAS,QAAQ,WAAW;AACrC,SAASC,WAAW,QAAQ,aAAa;AACzC,OAAOC,iBAAiB,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEO,YAAY;IAAEC;EAAe,CAAC,GAAGV,SAAS,CAAC,CAAC;EACpD,MAAM,CAACW,cAAc,EAAEC,iBAAiB,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACe,aAAa,EAAEC,gBAAgB,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC;EACrD,MAAM,CAACiB,UAAU,EAAEC,aAAa,CAAC,GAAGlB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEhDD,SAAS,CAAC,MAAM;IACZE,KAAK,CACAkB,GAAG,CAAC,wHAAwHR,YAAY,0CAA0C,CAAC,CACnLS,IAAI,CAAEC,GAAG,IAAK;MAAA,IAAAC,SAAA,EAAAC,cAAA,EAAAC,qBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA;MACXb,iBAAiB,CAAC,EAAAQ,SAAA,GAAAD,GAAG,CAACO,IAAI,cAAAN,SAAA,wBAAAC,cAAA,GAARD,SAAA,CAAUM,IAAI,cAAAL,cAAA,wBAAAC,qBAAA,GAAdD,cAAA,CAAgBM,KAAK,CAAC,CAAC,CAAC,cAAAL,qBAAA,wBAAAC,sBAAA,GAAxBD,qBAAA,CAA0BM,WAAW,cAAAL,sBAAA,wBAAAC,sBAAA,GAArCD,sBAAA,CAAuCM,YAAY,cAAAL,sBAAA,wBAAAC,sBAAA,GAAnDD,sBAAA,CAAqDM,OAAO,cAAAL,sBAAA,uBAA5DA,sBAAA,CAA8DE,KAAK,CAACI,KAAK,CAAC,CAAC,CAAC,KAAI,EAAE,CAAC;IACzG,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;IAC3D,CAAC,CAAC;EACV,CAAC,EAAE,CAACxB,YAAY,CAAC,CAAC;EAElB,MAAM0B,eAAe,GAAIC,KAAK,IAAK;IAC/BtB,gBAAgB,CAACD,aAAa,KAAKuB,KAAK,GAAG,IAAI,GAAGA,KAAK,CAAC;EAC5D,CAAC;EAED,MAAMC,oBAAoB,GAAGA,CAACC,MAAM,EAAEC,QAAQ,KAAK;IAC/CvB,aAAa,CAAEwB,cAAc,KAAM;MAC/B,GAAGA,cAAc;MACjB,CAACF,MAAM,GAAGC;IACd,CAAC,CAAC,CAAC;EACP,CAAC;EAED,MAAME,eAAe,GAAGA,CAACC,IAAI,EAAEH,QAAQ,KAAK;IACxC/B,QAAQ,CACJP,SAAS,CAAC;MACN0C,IAAI,EAAED,IAAI,CAACE,IAAI,CAACC,IAAI,CAACC,IAAI;MACzBC,WAAW,EAAEL,IAAI,CAACE,IAAI,CAACC,IAAI,CAACG,WAAW;MACvCC,KAAK,EAAEP,IAAI,CAACE,IAAI,CAACC,IAAI,CAACK,KAAK,GAAG,GAAG;MACjCC,GAAG,EAAE,oFAAoFT,IAAI,CAACE,IAAI,CAACC,IAAI,CAACO,OAAO,EAAE;MACjHC,QAAQ,EAAEd,QAAQ;MAClBe,cAAc,EAAE5C,cAAc,CAAE;IACpC,CAAC,CACL,CAAC;EACL,CAAC;EAED,oBACIL,OAAA;IAAKkD,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACtBnD,OAAA;MAAIkD,SAAS,EAAC,kBAAkB;MAAAC,QAAA,GAAE9C,cAAc,EAAC,OAAK;IAAA;MAAA+C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3DvD,OAAA;MAAKkD,SAAS,EAAC,WAAW;MAACM,EAAE,EAAC,kBAAkB;MAAAL,QAAA,EAC3C7C,cAAc,CAACmD,GAAG,CAAC,CAACpB,IAAI,EAAEqB,CAAC,KAAK;QAAA,IAAAC,UAAA,EAAAC,eAAA;QAC7B,IAAIvB,IAAI,aAAJA,IAAI,gBAAAsB,UAAA,GAAJtB,IAAI,CAAEE,IAAI,cAAAoB,UAAA,gBAAAC,eAAA,GAAVD,UAAA,CAAYpB,IAAI,cAAAqB,eAAA,eAAhBA,eAAA,CAAkBC,SAAS,EAAE;UAAA,IAAAC,WAAA,EAAAC,gBAAA,EAAAC,WAAA,EAAAC,gBAAA,EAAAC,qBAAA;UAC7B,oBACIlE,OAAA;YAAKkD,SAAS,EAAC,gBAAgB;YAAAC,QAAA,gBAC3BnD,OAAA;cAAIkD,SAAS,EAAC,kBAAkB;cAAAC,QAAA,eAC5BnD,OAAA;gBACIkD,SAAS,EAAE,oBAAoB1C,aAAa,KAAKkD,CAAC,GAAG,EAAE,GAAG,WAAW,EAAG;gBACxES,IAAI,EAAC,QAAQ;gBACbC,OAAO,EAAEA,CAAA,KAAMtC,eAAe,CAAC4B,CAAC,CAAE;gBAClC,iBAAelD,aAAa,KAAKkD,CAAC,GAAG,MAAM,GAAG,OAAQ;gBACtD,iBAAe,WAAWA,CAAC,EAAG;gBAC9B,kBAAe,UAAU;gBACzB,kBAAgB,YAAYA,CAAC,EAAG;gBAAAP,QAAA,gBAEhCnD,OAAA;kBAAGkD,SAAS,EAAC,UAAU;kBAAAC,QAAA,GAClBd,IAAI,CAACE,IAAI,CAACA,IAAI,CAAC8B,KAAK,EAAC,KAAG,EAAChC,IAAI,aAAJA,IAAI,wBAAAyB,WAAA,GAAJzB,IAAI,CAAEE,IAAI,cAAAuB,WAAA,wBAAAC,gBAAA,GAAVD,WAAA,CAAYvB,IAAI,cAAAwB,gBAAA,uBAAhBA,gBAAA,CAAkBF,SAAS,CAACS,MAAM;gBAAA;kBAAAlB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC7D,CAAC,eACJvD,OAAA;kBACIkD,SAAS,EAAE,OACP1C,aAAa,KAAKkD,CAAC,GAAG,eAAe,GAAG,iBAAiB;gBAC3C;kBAAAN,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAClB,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACD;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACT,CAAC,eACLvD,OAAA;cACIwD,EAAE,EAAE,WAAWE,CAAC,EAAG;cACnBR,SAAS,EAAE,+BAA+B1C,aAAa,KAAKkD,CAAC,GAAG,MAAM,GAAG,EAAE,EAAG;cAC9E,mBAAiB,UAAUA,CAAC,EAAG;cAC/B,kBAAe,mBAAmB;cAAAP,QAAA,eAElCnD,OAAA;gBAAKkD,SAAS,EAAC,gBAAgB;gBAAAC,QAAA,eAC3BnD,OAAA;kBAAKkD,SAAS,EAAC,kCAAkC;kBAAAC,QAAA,EAC5Cd,IAAI,aAAJA,IAAI,wBAAA2B,WAAA,GAAJ3B,IAAI,CAAEE,IAAI,cAAAyB,WAAA,wBAAAC,gBAAA,GAAVD,WAAA,CAAYzB,IAAI,cAAA0B,gBAAA,wBAAAC,qBAAA,GAAhBD,gBAAA,CAAkBJ,SAAS,cAAAK,qBAAA,uBAA3BA,qBAAA,CAA6BT,GAAG,CAAC,CAACpB,IAAI,EAAEkC,CAAC,KAAK;oBAC3C,MAAMrC,QAAQ,GAAGxB,UAAU,CAAC2B,IAAI,CAACE,IAAI,CAACC,IAAI,CAACgB,EAAE,CAAC,IAAI,CAAC;oBACnD,oBACIxD,OAAA;sBAAKkD,SAAS,EAAC,KAAK;sBAAAC,QAAA,eAChBnD,OAAA;wBAAKkD,SAAS,EAAC,MAAM;wBAAAC,QAAA,gBACjBnD,OAAA;0BACIwE,GAAG,EAAE,gGAAgGnC,IAAI,CAACE,IAAI,CAACC,IAAI,CAACO,OAAO,EAAG;0BAC9HG,SAAS,EAAC,uBAAuB;0BACjCuB,GAAG,EAAEpC,IAAI,CAACE,IAAI,CAACC,IAAI,CAACC;wBAAK;0BAAAW,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OAC5B,CAAC,eACFvD,OAAA;0BAAKkD,SAAS,EAAC,WAAW;0BAAAC,QAAA,gBACtBnD,OAAA;4BAAIkD,SAAS,EAAC,YAAY;4BAAAC,QAAA,EACrBd,IAAI,CAACE,IAAI,CAACC,IAAI,CAACC;0BAAI;4BAAAW,QAAA,EAAAC,YAAA;4BAAAC,UAAA;4BAAAC,YAAA;0BAAA,OACpB,CAAC,eACLvD,OAAA;4BAAAmD,QAAA,gBACInD,OAAA;8BAAAmD,QAAA,EAAG;4BAAO;8BAAAC,QAAA,EAAAC,YAAA;8BAAAC,UAAA;8BAAAC,YAAA;4BAAA,OAAG,CAAC,KAAC,EAAClB,IAAI,CAACE,IAAI,CAACC,IAAI,CAACK,KAAK,GAAG,GAAG;0BAAA;4BAAAO,QAAA,EAAAC,YAAA;4BAAAC,UAAA;4BAAAC,YAAA;0BAAA,OAC3C,CAAC,eACJvD,OAAA;4BAAGkD,SAAS,EAAC,WAAW;4BAAAC,QAAA,GAAC,uBACA,EAAC,GAAG,eACzBnD,OAAA;8BACImE,IAAI,EAAC,QAAQ;8BACbjB,SAAS,EAAC,gBAAgB;8BAC1BwB,KAAK,EAAExC,QAAS;8BAChByC,GAAG,EAAC,GAAG;8BACPC,QAAQ,EAAGC,CAAC,IACR7C,oBAAoB,CAChBK,IAAI,CAACE,IAAI,CAACC,IAAI,CAACgB,EAAE,EACjBsB,QAAQ,CAACD,CAAC,CAACE,MAAM,CAACL,KAAK,CAC3B;4BACH;8BAAAtB,QAAA,EAAAC,YAAA;8BAAAC,UAAA;8BAAAC,YAAA;4BAAA,OACJ,CAAC;0BAAA;4BAAAH,QAAA,EAAAC,YAAA;4BAAAC,UAAA;4BAAAC,YAAA;0BAAA,OACH,CAAC,eACJvD,OAAA;4BAAAoD,QAAA,EAAAC,YAAA;4BAAAC,UAAA;4BAAAC,YAAA;0BAAA,OAAK,CAAC,eACNvD,OAAA;4BAAAoD,QAAA,EAAAC,YAAA;4BAAAC,UAAA;4BAAAC,YAAA;0BAAA,OAAK,CAAC,eACNvD,OAAA;4BAAKkD,SAAS,EAAC,mDAAmD;4BAAAC,QAAA,eAC9DnD,OAAA;8BACIkD,SAAS,EAAC,iBAAiB;8BAC3BkB,OAAO,EAAEA,CAAA,KACLhC,eAAe,CAACC,IAAI,EAAEH,QAAQ,CACjC;8BAAAiB,QAAA,EACJ;4BAED;8BAAAC,QAAA,EAAAC,YAAA;8BAAAC,UAAA;8BAAAC,YAAA;4BAAA,OAAQ;0BAAC;4BAAAH,QAAA,EAAAC,YAAA;4BAAAC,UAAA;4BAAAC,YAAA;0BAAA,OACR,CAAC;wBAAA;0BAAAH,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OACL,CAAC;sBAAA;wBAAAH,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OACL;oBAAC,GA1CgBgB,CAAC;sBAAAnB,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OA2CtB,CAAC;kBAEd,CAAC;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACD;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACL;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACL,CAAC;UAAA,GAhF2BG,CAAC;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAiFjC,CAAC;QAEd;QACA,OAAO,IAAI;MACf,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eACNvD,OAAA,CAACF,iBAAiB;MAAAsD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpB,CAAC;AAEd;AAACrD,EAAA,CA3IQD,cAAc;EAAA,QACFJ,WAAW,EACaF,SAAS;AAAA;AAAAqF,EAAA,GAF7C/E,cAAc;AA6IvB,eAAeA,cAAc;AAAC,IAAA+E,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
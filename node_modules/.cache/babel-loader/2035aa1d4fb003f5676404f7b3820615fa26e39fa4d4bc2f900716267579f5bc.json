{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SANTHOSH\\\\React_Applications\\\\swiggy\\\\src\\\\components\\\\Cart.js\",\n  _s = $RefreshSig$();\n// import React from 'react';\n// import './cart.css';\n// import { useSelector, useDispatch } from 'react-redux';\n// import { removeFromCart, clearCart } from './reducer';\n// import ScrollToTopButton from './scrolltop';\n\n// function Cart() {\n//     const dispatch = useDispatch();\n//     const cartItems = useSelector((state) => state.cartItems);\n\n//     // Calculate total price considering quantity\n//     let totalPrice = cartItems.reduce((acc, item) => {\n//         return acc + item.Price * item.Quantity;\n//     }, 0);\n\n//     let discount = 0; // No discount\n\n//     if (totalPrice > 1000) {\n//         discount = totalPrice * 0.1; // 10% discount\n//     }\n\n//     const totalAmount = totalPrice - discount; // Assuming discount is subtracted from totalPrice\n\n//     const handleClearCart = () => {\n//         // Dispatch action to clear the cart\n//         dispatch(clearCart());\n//     };\n\n//     return (\n//         <>\n//         <div className=\"cart-container\">\n//             <div className=\"cart-header\">\n//                 <h2>Shopping Cart</h2>\n//                 <p>Number of items: {cartItems.length}</p>\n//             </div>\n//             <div className=\"cart-items\">\n//                 {cartItems.map((item, i) => (\n//                     <div className=\"cart-item\" key={i}>\n//                         <img src={item.Img} alt={item.Name} />\n//                         <div className=\"cart-item-details\">\n//                             <h5>{item.Name}</h5>\n//                             <p>{item.Description}</p>\n//                         </div>\n//                         <div className=\"cart-item-price\">\n//                             <b>&#8377;</b> {item.Price}\n//                         </div>\n//                         <div className=\"cart-item-quantity\">\n//                             <label>Quantity: {item.Quantity}</label>\n//                         </div>\n//                         <div className=\"cart-item-total\">\n//                             Total: <b>&#8377;</b> {item.Price * item.Quantity}\n//                         </div>\n//                         <button\n//                             className=\"btn btn-danger\" id = \"removecart\"\n//                             onClick={() => {\n//                                 const quantityToRemove = parseInt(prompt(`Enter quantity to remove for ${item.Name}:`, item.Quantity));\n//                                 if (!isNaN(quantityToRemove) && quantityToRemove > 0) {\n//                                     dispatch(removeFromCart({ index: i, quantity: quantityToRemove }));\n//                                 }\n//                             }}\n//                         >\n//                             Remove From Cart\n//                         </button>\n//                     </div>\n//                 ))}\n//             </div>\n//             <div className=\"cart-summary\">\n//                 <h4>Order Summary</h4>\n//                 <div className=\"cart-summary-item\">\n//                     Total Price: <b>&#8377;</b> {totalPrice}\n//                 </div>\n//                 <div className=\"cart-summary-item\">\n//                     Discount: <b>&#8377;</b> {discount}<br/>\n//                     <em style = {{color : \"red\"}}>*(To avail the discount, the purchase price must exceed 999)</em>\n//                 </div>\n//                 <div className=\"cart-summary-item\">\n//                     Total Amount: <b>&#8377;</b> {totalAmount}\n//                 </div>\n//                 <button className=\"order\"  onClick={handleClearCart}>\n//                     Place Order\n//                 </button>\n//             </div>\n//         </div>\n//     <ScrollToTopButton />\n//     </>\n//     );\n// }\n\n// export default Cart;\n\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { removeFromCart } from './reducer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Cart() {\n  _s();\n  const dispatch = useDispatch();\n  const cartItems = useSelector(state => state.cart.items);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Cart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: cartItems.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-4 mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: item.Img,\n            className: \"card-img-top\",\n            alt: item.Name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"card-title\",\n              children: item.Name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text\",\n              children: item.Description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cart-item-price\",\n              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"\\u20B9\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 37\n              }, this), \" \", parseFloat(item.Price).toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cart-item-quantity\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [\"Quantity: \", item.Quantity]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cart-item-total\",\n              children: [\"Total: \", /*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"\\u20B9\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 44\n              }, this), \" \", (parseFloat(item.Price) * item.Quantity).toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-danger mt-3\",\n              onClick: () => dispatch(removeFromCart(item)),\n              children: \"Remove\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 25\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 9\n  }, this);\n}\n_s(Cart, \"txUiseqBXG5hYpl9Jz1iv8Un+T0=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Cart;\nexport default Cart;\nvar _c;\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"names":["React","useSelector","useDispatch","removeFromCart","jsxDEV","_jsxDEV","Cart","_s","dispatch","cartItems","state","cart","items","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","index","src","Img","alt","Name","Description","parseFloat","Price","toFixed","Quantity","onClick","_c","$RefreshReg$"],"sources":["C:/Users/SANTHOSH/React_Applications/swiggy/src/components/Cart.js"],"sourcesContent":["// import React from 'react';\r\n// import './cart.css';\r\n// import { useSelector, useDispatch } from 'react-redux';\r\n// import { removeFromCart, clearCart } from './reducer';\r\n// import ScrollToTopButton from './scrolltop';\r\n\r\n// function Cart() {\r\n//     const dispatch = useDispatch();\r\n//     const cartItems = useSelector((state) => state.cartItems);\r\n\r\n//     // Calculate total price considering quantity\r\n//     let totalPrice = cartItems.reduce((acc, item) => {\r\n//         return acc + item.Price * item.Quantity;\r\n//     }, 0);\r\n\r\n//     let discount = 0; // No discount\r\n\r\n//     if (totalPrice > 1000) {\r\n//         discount = totalPrice * 0.1; // 10% discount\r\n//     }\r\n    \r\n//     const totalAmount = totalPrice - discount; // Assuming discount is subtracted from totalPrice\r\n\r\n//     const handleClearCart = () => {\r\n//         // Dispatch action to clear the cart\r\n//         dispatch(clearCart());\r\n//     };\r\n\r\n//     return (\r\n//         <>\r\n//         <div className=\"cart-container\">\r\n//             <div className=\"cart-header\">\r\n//                 <h2>Shopping Cart</h2>\r\n//                 <p>Number of items: {cartItems.length}</p>\r\n//             </div>\r\n//             <div className=\"cart-items\">\r\n//                 {cartItems.map((item, i) => (\r\n//                     <div className=\"cart-item\" key={i}>\r\n//                         <img src={item.Img} alt={item.Name} />\r\n//                         <div className=\"cart-item-details\">\r\n//                             <h5>{item.Name}</h5>\r\n//                             <p>{item.Description}</p>\r\n//                         </div>\r\n//                         <div className=\"cart-item-price\">\r\n//                             <b>&#8377;</b> {item.Price}\r\n//                         </div>\r\n//                         <div className=\"cart-item-quantity\">\r\n//                             <label>Quantity: {item.Quantity}</label>\r\n//                         </div>\r\n//                         <div className=\"cart-item-total\">\r\n//                             Total: <b>&#8377;</b> {item.Price * item.Quantity}\r\n//                         </div>\r\n//                         <button\r\n//                             className=\"btn btn-danger\" id = \"removecart\"\r\n//                             onClick={() => {\r\n//                                 const quantityToRemove = parseInt(prompt(`Enter quantity to remove for ${item.Name}:`, item.Quantity));\r\n//                                 if (!isNaN(quantityToRemove) && quantityToRemove > 0) {\r\n//                                     dispatch(removeFromCart({ index: i, quantity: quantityToRemove }));\r\n//                                 }\r\n//                             }}\r\n//                         >\r\n//                             Remove From Cart\r\n//                         </button>\r\n//                     </div>\r\n//                 ))}\r\n//             </div>\r\n//             <div className=\"cart-summary\">\r\n//                 <h4>Order Summary</h4>\r\n//                 <div className=\"cart-summary-item\">\r\n//                     Total Price: <b>&#8377;</b> {totalPrice}\r\n//                 </div>\r\n//                 <div className=\"cart-summary-item\">\r\n//                     Discount: <b>&#8377;</b> {discount}<br/>\r\n//                     <em style = {{color : \"red\"}}>*(To avail the discount, the purchase price must exceed 999)</em>\r\n//                 </div>\r\n//                 <div className=\"cart-summary-item\">\r\n//                     Total Amount: <b>&#8377;</b> {totalAmount}\r\n//                 </div>\r\n//                 <button className=\"order\"  onClick={handleClearCart}>\r\n//                     Place Order\r\n//                 </button>\r\n//             </div>\r\n//         </div>\r\n//     <ScrollToTopButton />\r\n//     </>\r\n//     );\r\n// }\r\n\r\n// export default Cart;\r\n\r\nimport React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { removeFromCart } from './reducer';\r\n\r\nfunction Cart() {\r\n    const dispatch = useDispatch();\r\n    const cartItems = useSelector((state) => state.cart.items);\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h2>Your Cart</h2>\r\n            <div className=\"row\">\r\n                {cartItems.map((item, index) => (\r\n                    <div className=\"col-md-4 mb-3\" key={index}>\r\n                        <div className=\"card\">\r\n                            <img src={item.Img} className=\"card-img-top\" alt={item.Name} />\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"card-title\">{item.Name}</h5>\r\n                                <p className=\"card-text\">{item.Description}</p>\r\n                                <div className=\"cart-item-price\">\r\n                                    <b>&#8377;</b> {parseFloat(item.Price).toFixed(2)}\r\n                                </div>\r\n                                <div className=\"cart-item-quantity\">\r\n                                    <label>Quantity: {item.Quantity}</label>\r\n                                </div>\r\n                                <div className=\"cart-item-total\">\r\n                                    Total: <b>&#8377;</b> {(parseFloat(item.Price) * item.Quantity).toFixed(2)}\r\n                                </div>\r\n                                <button\r\n                                    className=\"btn btn-danger mt-3\"\r\n                                    onClick={() => dispatch(removeFromCart(item))}\r\n                                >\r\n                                    Remove\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Cart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
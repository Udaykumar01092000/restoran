{"ast":null,"code":"// import React from 'react';\n// import './cart.css';\n// import { useSelector, useDispatch } from 'react-redux';\n// import { removeFromCart, clearCart } from './reducer'; // Import clearCart action\n// import ScrollToTopButton from './scrolltop';\n\n// function Cart() {\n//     const dispatch = useDispatch();\n//     const cartItems = useSelector((state) => state.cartItems);\n\n//     // Calculate total price considering quantity\n//     let totalPrice = cartItems.reduce((acc, item) => {\n//         return acc + item.Price * item.Quantity;\n//     }, 0);\n\n//     const handleClearCart = () => {\n//         // Dispatch action to clear the cart\n//         dispatch(clearCart());\n//     };\n\n//     return (\n//         <div>\n//             <h2 style={{ textAlign: 'center' }}>Cart</h2>\n//             <h4 style={{ textAlign: 'center' }}>Total Price = &#8377;{totalPrice}</h4>\n//             <div style={{ margin: \"0 auto\", textAlign: 'center' }}>\n//                 <button className=\"btn btn-danger\" id=\"removecart\" onClick={handleClearCart}>Clear Cart</button>\n//             </div>\n//             <div className=\"container\">\n//                 <div className=\"row row-cols-1 row-cols-md-2 g-2 m-3 \">\n//                     {cartItems.map((item, i) => (\n//                         <div className=\"row g-0 p-3\" key={i} id=\"cartrow\">\n//                             <div className=\"col-md-6 p-4\">\n//                                 <img\n//                                     src={item.Img}\n//                                     className=\"img-fluid rounded\"\n//                                     style={{ height: '250px', width: '300px' }}\n//                                     alt=\"...\"\n//                                 />\n//                             </div>\n//                             <div className=\"col-md-6\">\n//                                 <div className=\"card-body\">\n//                                     <h5 className=\"card-title\">{item.Name}</h5>\n//                                     <p className=\"card-text\">\n//                                         <b>&#8377;</b> {item.Price} x {item.Quantity} = &#8377;{item.Price * item.Quantity}\n//                                     </p>\n//                                     <p className=\"card-text description\">{item.Description}</p>\n//                                     <div className=\"d-flex\">\n//                                         <button\n//                                             className=\"btn btn-danger ms-2\"\n//                                             id=\"removecart\"\n//                                             onClick={() => {\n//                                                 // Prompt user to specify quantity to remove\n//                                                 const quantityToRemove = parseInt(prompt(`Enter quantity to remove for ${item.Name}:`, item.Quantity));\n//                                                 if (!isNaN(quantityToRemove) && quantityToRemove > 0) {\n//                                                     dispatch(removeFromCart({ index: i, quantity: quantityToRemove }));\n//                                                 }\n//                                             }}\n//                                         >\n//                                             Remove From Cart\n//                                         </button>\n//                                     </div>\n//                                 </div>\n//                             </div>\n//                         </div>\n//                     ))}\n//                 </div>\n//             </div>\n//             <ScrollToTopButton />\n//         </div>\n//     );\n// }\n\n// export default Cart;","map":{"version":3,"names":[],"sources":["C:/Users/SANTHOSH/React_Applications/swiggy/src/components/Cart.js"],"sourcesContent":["// import React from 'react';\r\n// import './cart.css';\r\n// import { useSelector, useDispatch } from 'react-redux';\r\n// import { removeFromCart, clearCart } from './reducer'; // Import clearCart action\r\n// import ScrollToTopButton from './scrolltop';\r\n\r\n// function Cart() {\r\n//     const dispatch = useDispatch();\r\n//     const cartItems = useSelector((state) => state.cartItems);\r\n\r\n//     // Calculate total price considering quantity\r\n//     let totalPrice = cartItems.reduce((acc, item) => {\r\n//         return acc + item.Price * item.Quantity;\r\n//     }, 0);\r\n\r\n//     const handleClearCart = () => {\r\n//         // Dispatch action to clear the cart\r\n//         dispatch(clearCart());\r\n//     };\r\n\r\n//     return (\r\n//         <div>\r\n//             <h2 style={{ textAlign: 'center' }}>Cart</h2>\r\n//             <h4 style={{ textAlign: 'center' }}>Total Price = &#8377;{totalPrice}</h4>\r\n//             <div style={{ margin: \"0 auto\", textAlign: 'center' }}>\r\n//                 <button className=\"btn btn-danger\" id=\"removecart\" onClick={handleClearCart}>Clear Cart</button>\r\n//             </div>\r\n//             <div className=\"container\">\r\n//                 <div className=\"row row-cols-1 row-cols-md-2 g-2 m-3 \">\r\n//                     {cartItems.map((item, i) => (\r\n//                         <div className=\"row g-0 p-3\" key={i} id=\"cartrow\">\r\n//                             <div className=\"col-md-6 p-4\">\r\n//                                 <img\r\n//                                     src={item.Img}\r\n//                                     className=\"img-fluid rounded\"\r\n//                                     style={{ height: '250px', width: '300px' }}\r\n//                                     alt=\"...\"\r\n//                                 />\r\n//                             </div>\r\n//                             <div className=\"col-md-6\">\r\n//                                 <div className=\"card-body\">\r\n//                                     <h5 className=\"card-title\">{item.Name}</h5>\r\n//                                     <p className=\"card-text\">\r\n//                                         <b>&#8377;</b> {item.Price} x {item.Quantity} = &#8377;{item.Price * item.Quantity}\r\n//                                     </p>\r\n//                                     <p className=\"card-text description\">{item.Description}</p>\r\n//                                     <div className=\"d-flex\">\r\n//                                         <button\r\n//                                             className=\"btn btn-danger ms-2\"\r\n//                                             id=\"removecart\"\r\n//                                             onClick={() => {\r\n//                                                 // Prompt user to specify quantity to remove\r\n//                                                 const quantityToRemove = parseInt(prompt(`Enter quantity to remove for ${item.Name}:`, item.Quantity));\r\n//                                                 if (!isNaN(quantityToRemove) && quantityToRemove > 0) {\r\n//                                                     dispatch(removeFromCart({ index: i, quantity: quantityToRemove }));\r\n//                                                 }\r\n//                                             }}\r\n//                                         >\r\n//                                             Remove From Cart\r\n//                                         </button>\r\n//                                     </div>\r\n//                                 </div>\r\n//                             </div>\r\n//                         </div>\r\n//                     ))}\r\n//                 </div>\r\n//             </div>\r\n//             <ScrollToTopButton />\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default Cart;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
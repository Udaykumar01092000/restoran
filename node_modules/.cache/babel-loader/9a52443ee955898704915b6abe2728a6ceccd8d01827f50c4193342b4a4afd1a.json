{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SANTHOSH\\\\React_Applications\\\\swiggy\\\\src\\\\components\\\\Cart.js\",\n  _s = $RefreshSig$();\n// import React from 'react';\n// import './cart.css';\n// import { useSelector, useDispatch } from 'react-redux';\n// import { removeFromCart, clearCart, increaseQuantity } from './reducer';\n// import ScrollToTopButton from './scrolltop';\n\n// function Cart() {\n//     const dispatch = useDispatch();\n//     const cartItems = useSelector((state) => state.cartItems);\n\n//     let totalPrice = cartItems.reduce((acc, item) => {\n//         const price = parseFloat(item.Price);\n//         const quantity = parseInt(item.Quantity);\n//         return acc + (price * quantity); // Accumulate total price\n//     }, 0);\n\n//     let discount = 0; // No discount\n\n//     if (totalPrice > 999) {\n//         discount = totalPrice * 0.1; // 10% discount\n//     }\n\n//     const totalAmount = totalPrice - discount; // Calculate total amount after discount\n\n//     // Handle clear cart and place order logic\n//     const handleClearCart = () => {\n//         const confirmClear = window.confirm('Are you sure you want to clear the cart?');\n//         if (confirmClear) {\n//             dispatch(clearCart());\n//             alert('Cart cleared successfully');\n//         }\n//     };\n\n//     const handlePlaceOrder = () => {\n//         if (cartItems.length === 0) {\n//             alert('Please purchase items to place an order');\n//         } else {\n//             const confirmOrder = window.confirm('Are you sure you want to place the order?');\n//             if (confirmOrder) {\n//                 dispatch(clearCart());\n//                 alert('Order placed successfully');\n//             }\n//         }\n//     };\n\n//     const handleIncreaseQuantity = (index) => {\n//         dispatch(increaseQuantity({ index, quantityToAdd: 1 }));\n//     };\n\n//     return (\n//         <>\n//             <div className=\"cart-container\">\n//                 <div className=\"cart-header\">\n//                     <h2 className=\"header\">Shopping Cart</h2>\n//                     <div>\n//                         <p className=\"header\">Number of items: <b>{cartItems.length}</b></p>\n//                         <button\n//                             className=\"removecart\"\n//                             style={{ width: \"200px\" }}\n//                             onClick={handleClearCart} // Call handleClearCart to clear the cart\n//                         >\n//                             Clear Cart\n//                         </button>\n//                     </div>\n//                 </div>\n//                 <div className=\"cart-items\">\n//                     {cartItems.map((item, i) => (\n//                         <div className=\"cart-item\" key={i}>\n//                             <h1 className=\"restitle\">Restaurant: {item.RestaurantName}</h1>\n//                             <img src={item.Img} alt={item.Name} />\n//                             <div className=\"cart-item-details\">\n//                                 <h3 className=\"restitle\">{item.Name}</h3>\n//                                 <p>{item.Description}</p>\n//                             </div>\n//                             <div className=\"cart-item-price\">\n//                                 <label><b>Price : &#8377;</b> {parseFloat(item.Price).toFixed(2)}</label>\n//                             </div>\n//                             <div className=\"cart-item-quantity\">\n//                                 <label><b>Quantity:</b> {item.Quantity}</label><br/>\n//                                 <button\n//                                     className=\"order\"\n//                                     onClick={() => handleIncreaseQuantity(i)}\n//                                 >\n//                                     + Increase Quantity\n//                                 </button>\n//                             </div>\n//                             <div className=\"cart-item-total\">\n//                                 <b>Total: &#8377;</b> {(parseFloat(item.Price) * parseInt(item.Quantity)).toFixed(2)}\n//                             </div>\n//                             <button\n//                                 className=\"removecart\"\n//                                 id={`removecart-${i}`}\n//                                 onClick={() => {\n//                                     const quantityToRemove = parseInt(prompt(`Enter quantity to remove for ${item.Name}:`, item.Quantity));\n//                                     if (!isNaN(quantityToRemove) && quantityToRemove > 0) {\n//                                         dispatch(removeFromCart({ index: i, quantity: quantityToRemove }));\n//                                     }\n//                                 }}\n//                             >\n//                                 Remove From Cart\n//                             </button>\n//                         </div>\n//                     ))}\n//                 </div>\n//                 <div className=\"cart-summary\">\n//                     <h4>Order Summary</h4>\n//                     <div className=\"cart-summary-item\">\n//                         Total Price: <b>&#8377;</b> {totalPrice.toFixed(2)}\n//                     </div>\n//                     {(totalPrice <= 999 && totalPrice >= 1) && (\n//                         <div className=\"cart-summary-item\">\n//                             <em style={{ color: \"red\" }}>* (To avail the discount of 10%, the purchase price must exceed 999)</em>\n//                         </div>\n//                     )}\n//                     {totalPrice > 999 && (\n//                         <div className=\"cart-summary-item\">\n//                             Discount: <b>&#8377;</b> {discount.toFixed(2)}\n//                         </div>\n//                     )}\n//                     <div className=\"cart-summary-item\">\n//                         Total Amount: <b>&#8377;</b> {totalAmount.toFixed(2)}\n//                     </div>\n//                     <button className=\"order\" onClick={handlePlaceOrder}>\n//                         Place Order\n//                     </button>\n//                 </div>\n//             </div>\n//             <ScrollToTopButton />\n//         </>\n//     );\n// }\n\n// export default Cart;\n\nimport React from 'react';\nimport './cart.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { removeFromCart, clearCart, increaseQuantity } from './reducer';\nimport ScrollToTopButton from './scrolltop';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Cart() {\n  _s();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const cartItems = useSelector(state => state.cartItems);\n  let totalPrice = cartItems.reduce((acc, item) => {\n    const price = parseFloat(item.Price);\n    const quantity = parseInt(item.Quantity);\n    return acc + price * quantity;\n  }, 0);\n  let discount = 0; // No discount\n\n  if (totalPrice > 999) {\n    discount = totalPrice * 0.1; // 10% discount\n  }\n  const totalAmount = totalPrice - discount; // Calculate total amount after discount\n\n  // Handle clear cart logic\n  const handleClearCart = () => {\n    const confirmClear = window.confirm('Are you sure you want to clear the cart?');\n    if (confirmClear) {\n      dispatch(clearCart());\n      alert('Cart cleared successfully');\n    }\n  };\n  const handlePlaceOrder = () => {\n    if (cartItems.length === 0) {\n      alert('Please purchase items to place an order');\n    } else {\n      const confirmOrder = window.confirm('Are you sure you want to place the order?');\n      if (confirmOrder) {\n        navigate('/print-bill'); // Navigate to Print Bill page\n      }\n    }\n  };\n  const handleIncreaseQuantity = index => {\n    dispatch(increaseQuantity({\n      index,\n      quantityToAdd: 1\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cart-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cart-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"header\",\n          children: \"Shopping Cart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"header\",\n            children: [\"Number of items: \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: cartItems.length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 64\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"removecart\",\n            style: {\n              width: \"200px\"\n            },\n            onClick: handleClearCart // Call handleClearCart to clear the cart\n            ,\n            children: \"Clear Cart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cart-items\",\n        children: cartItems.map((item, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cart-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"restitle\",\n            children: [\"Restaurant: \", item.RestaurantName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: item.Img,\n            alt: item.Name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cart-item-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"restitle\",\n              children: item.Name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: item.Description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cart-item-price\",\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"Price : \\u20B9\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 40\n              }, this), \" \", parseFloat(item.Price).toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cart-item-quantity\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"Quantity:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 40\n              }, this), \" \", item.Quantity]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 80\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"order\",\n              onClick: () => handleIncreaseQuantity(i),\n              children: \"+ Increase Quantity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cart-item-total\",\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Total: \\u20B9\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 33\n            }, this), \" \", (parseFloat(item.Price) * parseInt(item.Quantity)).toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"removecart\",\n            id: `removecart-${i}`,\n            onClick: () => {\n              const quantityToRemove = parseInt(prompt(`Enter quantity to remove for ${item.Name}:`, item.Quantity));\n              if (!isNaN(quantityToRemove) && quantityToRemove > 0) {\n                dispatch(removeFromCart({\n                  index: i,\n                  quantity: quantityToRemove\n                }));\n              }\n            },\n            children: \"Remove From Cart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 29\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cart-summary\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Order Summary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cart-summary-item\",\n          children: [\"Total Price: \", /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"\\u20B9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 38\n          }, this), \" \", totalPrice.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 21\n        }, this), totalPrice <= 999 && totalPrice >= 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cart-summary-item\",\n          children: /*#__PURE__*/_jsxDEV(\"em\", {\n            style: {\n              color: \"red\"\n            },\n            children: \"* (To avail the discount of 10%, the purchase price must exceed 999)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 25\n        }, this), totalPrice > 999 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cart-summary-item\",\n          children: [\"Discount: \", /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"\\u20B9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 39\n          }, this), \" \", discount.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cart-summary-item\",\n          children: [\"Total Amount: \", /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"\\u20B9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 39\n          }, this), \" \", totalAmount.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"order\",\n          onClick: handlePlaceOrder,\n          children: \"Place Order\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ScrollToTopButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(Cart, \"CTCHaQqlnhp2YIhPX99hqus6kuA=\", false, function () {\n  return [useDispatch, useNavigate, useSelector];\n});\n_c = Cart;\nexport default Cart;\nvar _c;\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"names":["React","useSelector","useDispatch","removeFromCart","clearCart","increaseQuantity","ScrollToTopButton","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","Cart","_s","dispatch","navigate","cartItems","state","totalPrice","reduce","acc","item","price","parseFloat","Price","quantity","parseInt","Quantity","discount","totalAmount","handleClearCart","confirmClear","window","confirm","alert","handlePlaceOrder","length","confirmOrder","handleIncreaseQuantity","index","quantityToAdd","children","className","fileName","_jsxFileName","lineNumber","columnNumber","style","width","onClick","map","i","RestaurantName","src","Img","alt","Name","Description","toFixed","id","quantityToRemove","prompt","isNaN","color","_c","$RefreshReg$"],"sources":["C:/Users/SANTHOSH/React_Applications/swiggy/src/components/Cart.js"],"sourcesContent":["// import React from 'react';\r\n// import './cart.css';\r\n// import { useSelector, useDispatch } from 'react-redux';\r\n// import { removeFromCart, clearCart, increaseQuantity } from './reducer';\r\n// import ScrollToTopButton from './scrolltop';\r\n\r\n\r\n// function Cart() {\r\n//     const dispatch = useDispatch();\r\n//     const cartItems = useSelector((state) => state.cartItems);\r\n\r\n//     let totalPrice = cartItems.reduce((acc, item) => {\r\n//         const price = parseFloat(item.Price);\r\n//         const quantity = parseInt(item.Quantity);\r\n//         return acc + (price * quantity); // Accumulate total price\r\n//     }, 0);\r\n\r\n//     let discount = 0; // No discount\r\n\r\n//     if (totalPrice > 999) {\r\n//         discount = totalPrice * 0.1; // 10% discount\r\n//     }\r\n\r\n//     const totalAmount = totalPrice - discount; // Calculate total amount after discount\r\n\r\n//     // Handle clear cart and place order logic\r\n//     const handleClearCart = () => {\r\n//         const confirmClear = window.confirm('Are you sure you want to clear the cart?');\r\n//         if (confirmClear) {\r\n//             dispatch(clearCart());\r\n//             alert('Cart cleared successfully');\r\n//         }\r\n//     };\r\n\r\n//     const handlePlaceOrder = () => {\r\n//         if (cartItems.length === 0) {\r\n//             alert('Please purchase items to place an order');\r\n//         } else {\r\n//             const confirmOrder = window.confirm('Are you sure you want to place the order?');\r\n//             if (confirmOrder) {\r\n//                 dispatch(clearCart());\r\n//                 alert('Order placed successfully');\r\n//             }\r\n//         }\r\n//     };\r\n\r\n//     const handleIncreaseQuantity = (index) => {\r\n//         dispatch(increaseQuantity({ index, quantityToAdd: 1 }));\r\n//     };\r\n\r\n//     return (\r\n//         <>\r\n//             <div className=\"cart-container\">\r\n//                 <div className=\"cart-header\">\r\n//                     <h2 className=\"header\">Shopping Cart</h2>\r\n//                     <div>\r\n//                         <p className=\"header\">Number of items: <b>{cartItems.length}</b></p>\r\n//                         <button\r\n//                             className=\"removecart\"\r\n//                             style={{ width: \"200px\" }}\r\n//                             onClick={handleClearCart} // Call handleClearCart to clear the cart\r\n//                         >\r\n//                             Clear Cart\r\n//                         </button>\r\n//                     </div>\r\n//                 </div>\r\n//                 <div className=\"cart-items\">\r\n//                     {cartItems.map((item, i) => (\r\n//                         <div className=\"cart-item\" key={i}>\r\n//                             <h1 className=\"restitle\">Restaurant: {item.RestaurantName}</h1>\r\n//                             <img src={item.Img} alt={item.Name} />\r\n//                             <div className=\"cart-item-details\">\r\n//                                 <h3 className=\"restitle\">{item.Name}</h3>\r\n//                                 <p>{item.Description}</p>\r\n//                             </div>\r\n//                             <div className=\"cart-item-price\">\r\n//                                 <label><b>Price : &#8377;</b> {parseFloat(item.Price).toFixed(2)}</label>\r\n//                             </div>\r\n//                             <div className=\"cart-item-quantity\">\r\n//                                 <label><b>Quantity:</b> {item.Quantity}</label><br/>\r\n//                                 <button\r\n//                                     className=\"order\"\r\n//                                     onClick={() => handleIncreaseQuantity(i)}\r\n//                                 >\r\n//                                     + Increase Quantity\r\n//                                 </button>\r\n//                             </div>\r\n//                             <div className=\"cart-item-total\">\r\n//                                 <b>Total: &#8377;</b> {(parseFloat(item.Price) * parseInt(item.Quantity)).toFixed(2)}\r\n//                             </div>\r\n//                             <button\r\n//                                 className=\"removecart\"\r\n//                                 id={`removecart-${i}`}\r\n//                                 onClick={() => {\r\n//                                     const quantityToRemove = parseInt(prompt(`Enter quantity to remove for ${item.Name}:`, item.Quantity));\r\n//                                     if (!isNaN(quantityToRemove) && quantityToRemove > 0) {\r\n//                                         dispatch(removeFromCart({ index: i, quantity: quantityToRemove }));\r\n//                                     }\r\n//                                 }}\r\n//                             >\r\n//                                 Remove From Cart\r\n//                             </button>\r\n//                         </div>\r\n//                     ))}\r\n//                 </div>\r\n//                 <div className=\"cart-summary\">\r\n//                     <h4>Order Summary</h4>\r\n//                     <div className=\"cart-summary-item\">\r\n//                         Total Price: <b>&#8377;</b> {totalPrice.toFixed(2)}\r\n//                     </div>\r\n//                     {(totalPrice <= 999 && totalPrice >= 1) && (\r\n//                         <div className=\"cart-summary-item\">\r\n//                             <em style={{ color: \"red\" }}>* (To avail the discount of 10%, the purchase price must exceed 999)</em>\r\n//                         </div>\r\n//                     )}\r\n//                     {totalPrice > 999 && (\r\n//                         <div className=\"cart-summary-item\">\r\n//                             Discount: <b>&#8377;</b> {discount.toFixed(2)}\r\n//                         </div>\r\n//                     )}\r\n//                     <div className=\"cart-summary-item\">\r\n//                         Total Amount: <b>&#8377;</b> {totalAmount.toFixed(2)}\r\n//                     </div>\r\n//                     <button className=\"order\" onClick={handlePlaceOrder}>\r\n//                         Place Order\r\n//                     </button>\r\n//                 </div>\r\n//             </div>\r\n//             <ScrollToTopButton />\r\n//         </>\r\n//     );\r\n// }\r\n\r\n// export default Cart;\r\n\r\n\r\nimport React from 'react';\r\nimport './cart.css';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { removeFromCart, clearCart, increaseQuantity } from './reducer';\r\nimport ScrollToTopButton from './scrolltop';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction Cart() {\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n    const cartItems = useSelector((state) => state.cartItems);\r\n\r\n    let totalPrice = cartItems.reduce((acc, item) => {\r\n        const price = parseFloat(item.Price);\r\n        const quantity = parseInt(item.Quantity);\r\n        return acc + (price * quantity);\r\n    }, 0);\r\n\r\n    let discount = 0; // No discount\r\n\r\n    if (totalPrice > 999) {\r\n        discount = totalPrice * 0.1; // 10% discount\r\n    }\r\n\r\n    const totalAmount = totalPrice - discount; // Calculate total amount after discount\r\n\r\n    // Handle clear cart logic\r\n    const handleClearCart = () => {\r\n        const confirmClear = window.confirm('Are you sure you want to clear the cart?');\r\n        if (confirmClear) {\r\n            dispatch(clearCart());\r\n            alert('Cart cleared successfully');\r\n        }\r\n    };\r\n\r\n    const handlePlaceOrder = () => {\r\n        if (cartItems.length === 0) {\r\n            alert('Please purchase items to place an order');\r\n        } else {\r\n            const confirmOrder = window.confirm('Are you sure you want to place the order?');\r\n            if (confirmOrder) {\r\n                navigate('/print-bill'); // Navigate to Print Bill page\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleIncreaseQuantity = (index) => {\r\n        dispatch(increaseQuantity({ index, quantityToAdd: 1 }));\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"cart-container\">\r\n                <div className=\"cart-header\">\r\n                    <h2 className=\"header\">Shopping Cart</h2>\r\n                    <div>\r\n                        <p className=\"header\">Number of items: <b>{cartItems.length}</b></p>\r\n                        <button\r\n                            className=\"removecart\"\r\n                            style={{ width: \"200px\" }}\r\n                            onClick={handleClearCart} // Call handleClearCart to clear the cart\r\n                        >\r\n                            Clear Cart\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"cart-items\">\r\n                    {cartItems.map((item, i) => (\r\n                        <div className=\"cart-item\" key={i}>\r\n                            <h1 className=\"restitle\">Restaurant: {item.RestaurantName}</h1>\r\n                            <img src={item.Img} alt={item.Name} />\r\n                            <div className=\"cart-item-details\">\r\n                                <h3 className=\"restitle\">{item.Name}</h3>\r\n                                <p>{item.Description}</p>\r\n                            </div>\r\n                            <div className=\"cart-item-price\">\r\n                                <label><b>Price : &#8377;</b> {parseFloat(item.Price).toFixed(2)}</label>\r\n                            </div>\r\n                            <div className=\"cart-item-quantity\">\r\n                                <label><b>Quantity:</b> {item.Quantity}</label><br/>\r\n                                <button\r\n                                    className=\"order\"\r\n                                    onClick={() => handleIncreaseQuantity(i)}\r\n                                >\r\n                                    + Increase Quantity\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"cart-item-total\">\r\n                                <b>Total: &#8377;</b> {(parseFloat(item.Price) * parseInt(item.Quantity)).toFixed(2)}\r\n                            </div>\r\n                            <button\r\n                                className=\"removecart\"\r\n                                id={`removecart-${i}`}\r\n                                onClick={() => {\r\n                                    const quantityToRemove = parseInt(prompt(`Enter quantity to remove for ${item.Name}:`, item.Quantity));\r\n                                    if (!isNaN(quantityToRemove) && quantityToRemove > 0) {\r\n                                        dispatch(removeFromCart({ index: i, quantity: quantityToRemove }));\r\n                                    }\r\n                                }}\r\n                            >\r\n                                Remove From Cart\r\n                            </button>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                <div className=\"cart-summary\">\r\n                    <h4>Order Summary</h4>\r\n                    <div className=\"cart-summary-item\">\r\n                        Total Price: <b>&#8377;</b> {totalPrice.toFixed(2)}\r\n                    </div>\r\n                    {(totalPrice <= 999 && totalPrice >= 1) && (\r\n                        <div className=\"cart-summary-item\">\r\n                            <em style={{ color: \"red\" }}>* (To avail the discount of 10%, the purchase price must exceed 999)</em>\r\n                        </div>\r\n                    )}\r\n                    {totalPrice > 999 && (\r\n                        <div className=\"cart-summary-item\">\r\n                            Discount: <b>&#8377;</b> {discount.toFixed(2)}\r\n                        </div>\r\n                    )}\r\n                    <div className=\"cart-summary-item\">\r\n                        Total Amount: <b>&#8377;</b> {totalAmount.toFixed(2)}\r\n                    </div>\r\n                    <button className=\"order\" onClick={handlePlaceOrder}>\r\n                        Place Order\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            <ScrollToTopButton />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Cart;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,YAAY;AACnB,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,cAAc,EAAEC,SAAS,EAAEC,gBAAgB,QAAQ,WAAW;AACvE,OAAOC,iBAAiB,MAAM,aAAa;AAC3C,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE/C,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACZ,MAAMC,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAC9B,MAAMa,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAMS,SAAS,GAAGf,WAAW,CAAEgB,KAAK,IAAKA,KAAK,CAACD,SAAS,CAAC;EAEzD,IAAIE,UAAU,GAAGF,SAAS,CAACG,MAAM,CAAC,CAACC,GAAG,EAAEC,IAAI,KAAK;IAC7C,MAAMC,KAAK,GAAGC,UAAU,CAACF,IAAI,CAACG,KAAK,CAAC;IACpC,MAAMC,QAAQ,GAAGC,QAAQ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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
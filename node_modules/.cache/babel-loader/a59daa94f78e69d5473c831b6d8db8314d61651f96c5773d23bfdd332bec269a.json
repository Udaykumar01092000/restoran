{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SANTHOSH\\\\React_Applications\\\\swiggy\\\\src\\\\components\\\\locations.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport '../App.css'; // Import the CSS file if needed\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Locations({\n  setLocations\n}) {\n  _s();\n  let [userLocationSearch, setUserLocationSearch] = useState(\"\");\n  let [locationSuggestion, setLocationSuggestion] = useState([]);\n  let [error, setError] = useState(null);\n  useEffect(() => {\n    if (userLocationSearch) {\n      axios.get(`https://www.swiggy.com/dapi/misc/place-autocomplete?input=${userLocationSearch}&types=`).then(res => {\n        if (res.data.data) {\n          setLocationSuggestion(res.data.data);\n        }\n      }).catch(error => {\n        console.error('Error fetching location suggestions:', error);\n        setLocationSuggestion([]);\n        setError('No locations found. Please try again.');\n      });\n    }\n  }, [userLocationSearch]);\n  const clearInput = () => {\n    setUserLocationSearch(\"\");\n    setLocationSuggestion([]);\n    setError(null); // Reset error state\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col-2 pt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: `form-control ${userLocationSearch ? 'highlighted-input' : ''}`,\n        value: userLocationSearch,\n        onChange: e => {\n          setUserLocationSearch(e.target.value);\n        },\n        placeholder: \"Search Locations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-outline-secondary\",\n        type: \"button\",\n        onClick: clearInput,\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa fa-times\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n      style: {\n        textAlign: \"left\",\n        padding: \"7px 20px\",\n        listStyleType: \"none\"\n      },\n      children: userLocationSearch !== \"\" ? locationSuggestion === null || locationSuggestion === void 0 ? void 0 : locationSuggestion.map((item, i) => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => {\n            axios.get(`https://www.swiggy.com/dapi/misc/address-recommend?place_id=${item.place_id}`).then(res => {\n              if (res.data.data.length > 0) {\n                let locationData = res.data.data[0].geometry.location;\n                setLocations({\n                  lat: locationData.lat,\n                  long: locationData.lng\n                });\n                setLocationSuggestion([]);\n                setError(null); // Reset error state\n              } else {\n                setError('No restaurants found near this location.');\n              }\n            }).catch(error => {\n              console.error('Error fetching restaurant recommendations:', error);\n              setError('Failed to fetch restaurant recommendations. Please try again.');\n            });\n          },\n          className: \"locationName\",\n          style: {\n            display: \"flex\",\n            alignItems: \"center\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-map-marker-alt location-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 14\n          }, this), item.description]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this);\n      }) : \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(Locations, \"O3wn9gvYDU0yscIzQP5+3zwkieU=\");\n_c = Locations;\nexport default Locations;\nvar _c;\n$RefreshReg$(_c, \"Locations\");","map":{"version":3,"names":["axios","React","useState","useEffect","jsxDEV","_jsxDEV","Locations","setLocations","_s","userLocationSearch","setUserLocationSearch","locationSuggestion","setLocationSuggestion","error","setError","get","then","res","data","catch","console","clearInput","className","children","type","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","textAlign","padding","listStyleType","map","item","i","place_id","length","locationData","geometry","location","lat","long","lng","display","alignItems","description","_c","$RefreshReg$"],"sources":["C:/Users/SANTHOSH/React_Applications/swiggy/src/components/locations.js"],"sourcesContent":["import axios from 'axios';\r\nimport React, { useState, useEffect } from 'react';\r\nimport '../App.css'; // Import the CSS file if needed\r\n\r\nfunction Locations({ setLocations }) {\r\n  let [userLocationSearch, setUserLocationSearch] = useState(\"\");\r\n  let [locationSuggestion, setLocationSuggestion] = useState([]);\r\n  let [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (userLocationSearch) {\r\n      axios.get(`https://www.swiggy.com/dapi/misc/place-autocomplete?input=${userLocationSearch}&types=`)\r\n        .then((res) => {\r\n          if (res.data.data) {\r\n            setLocationSuggestion(res.data.data);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error fetching location suggestions:', error);\r\n          setLocationSuggestion([]);\r\n          setError('No locations found. Please try again.');\r\n        });\r\n    }\r\n  }, [userLocationSearch]);\r\n\r\n  const clearInput = () => {\r\n    setUserLocationSearch(\"\");\r\n    setLocationSuggestion([]);\r\n    setError(null); // Reset error state\r\n  };\r\n\r\n  return (\r\n    <div className=\"col-2 pt-4\">\r\n      <div className=\"input-group mb-3\">\r\n        <input\r\n          type=\"text\"\r\n          className={`form-control ${userLocationSearch ? 'highlighted-input' : ''}`}\r\n          value={userLocationSearch}\r\n          onChange={(e) => {\r\n            setUserLocationSearch(e.target.value);\r\n          }}\r\n          placeholder=\"Search Locations\"\r\n        />\r\n        <button className=\"btn btn-outline-secondary\" type=\"button\" onClick={clearInput}>\r\n          <i className=\"fa fa-times\"></i>\r\n        </button>\r\n      </div>\r\n      {error && <p className=\"error-message\">{error}</p>}\r\n      <ol style={{ textAlign: \"left\", padding: \"7px 20px\", listStyleType: \"none\" }}>\r\n        {userLocationSearch !== \"\" ? locationSuggestion?.map((item, i) => {\r\n          return (\r\n            <li\r\n              onClick={() => {\r\n                axios.get(`https://www.swiggy.com/dapi/misc/address-recommend?place_id=${item.place_id}`)\r\n                  .then((res) => {\r\n                    if (res.data.data.length > 0) {\r\n                      let locationData = res.data.data[0].geometry.location;\r\n                      setLocations({\r\n                        lat: locationData.lat,\r\n                        long: locationData.lng\r\n                      });\r\n                      setLocationSuggestion([]);\r\n                      setError(null); // Reset error state\r\n                    } else {\r\n                      setError('No restaurants found near this location.');\r\n                    }\r\n                  })\r\n                  .catch((error) => {\r\n                    console.error('Error fetching restaurant recommendations:', error);\r\n                    setError('Failed to fetch restaurant recommendations. Please try again.');\r\n                  });\r\n              }}\r\n              key={i}\r\n              className=\"locationName\"\r\n              style={{ display: \"flex\", alignItems: \"center\" }}\r\n            >\r\n             <i className=\"fa fa-map-marker-alt location-icon\"></i>\r\n              {item.description}\r\n            </li>\r\n          );\r\n        }) : \"\"}\r\n      </ol>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Locations;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,YAAY,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErB,SAASC,SAASA,CAAC;EAAEC;AAAa,CAAC,EAAE;EAAAC,EAAA;EACnC,IAAI,CAACC,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC9D,IAAI,CAACS,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC9D,IAAI,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACd,IAAIM,kBAAkB,EAAE;MACtBT,KAAK,CAACe,GAAG,CAAC,6DAA6DN,kBAAkB,SAAS,CAAC,CAChGO,IAAI,CAAEC,GAAG,IAAK;QACb,IAAIA,GAAG,CAACC,IAAI,CAACA,IAAI,EAAE;UACjBN,qBAAqB,CAACK,GAAG,CAACC,IAAI,CAACA,IAAI,CAAC;QACtC;MACF,CAAC,CAAC,CACDC,KAAK,CAAEN,KAAK,IAAK;QAChBO,OAAO,CAACP,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;QAC5DD,qBAAqB,CAAC,EAAE,CAAC;QACzBE,QAAQ,CAAC,uCAAuC,CAAC;MACnD,CAAC,CAAC;IACN;EACF,CAAC,EAAE,CAACL,kBAAkB,CAAC,CAAC;EAExB,MAAMY,UAAU,GAAGA,CAAA,KAAM;IACvBX,qBAAqB,CAAC,EAAE,CAAC;IACzBE,qBAAqB,CAAC,EAAE,CAAC;IACzBE,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAClB,CAAC;EAED,oBACET,OAAA;IAAKiB,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACzBlB,OAAA;MAAKiB,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC/BlB,OAAA;QACEmB,IAAI,EAAC,MAAM;QACXF,SAAS,EAAE,gBAAgBb,kBAAkB,GAAG,mBAAmB,GAAG,EAAE,EAAG;QAC3EgB,KAAK,EAAEhB,kBAAmB;QAC1BiB,QAAQ,EAAGC,CAAC,IAAK;UACfjB,qBAAqB,CAACiB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAC;QACvC,CAAE;QACFI,WAAW,EAAC;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/B,CAAC,eACF5B,OAAA;QAAQiB,SAAS,EAAC,2BAA2B;QAACE,IAAI,EAAC,QAAQ;QAACU,OAAO,EAAEb,UAAW;QAAAE,QAAA,eAC9ElB,OAAA;UAAGiB,SAAS,EAAC;QAAa;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,EACLpB,KAAK,iBAAIR,OAAA;MAAGiB,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAEV;IAAK;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClD5B,OAAA;MAAI8B,KAAK,EAAE;QAAEC,SAAS,EAAE,MAAM;QAAEC,OAAO,EAAE,UAAU;QAAEC,aAAa,EAAE;MAAO,CAAE;MAAAf,QAAA,EAC1Ed,kBAAkB,KAAK,EAAE,GAAGE,kBAAkB,aAAlBA,kBAAkB,uBAAlBA,kBAAkB,CAAE4B,GAAG,CAAC,CAACC,IAAI,EAAEC,CAAC,KAAK;QAChE,oBACEpC,OAAA;UACE6B,OAAO,EAAEA,CAAA,KAAM;YACblC,KAAK,CAACe,GAAG,CAAC,+DAA+DyB,IAAI,CAACE,QAAQ,EAAE,CAAC,CACtF1B,IAAI,CAAEC,GAAG,IAAK;cACb,IAAIA,GAAG,CAACC,IAAI,CAACA,IAAI,CAACyB,MAAM,GAAG,CAAC,EAAE;gBAC5B,IAAIC,YAAY,GAAG3B,GAAG,CAACC,IAAI,CAACA,IAAI,CAAC,CAAC,CAAC,CAAC2B,QAAQ,CAACC,QAAQ;gBACrDvC,YAAY,CAAC;kBACXwC,GAAG,EAAEH,YAAY,CAACG,GAAG;kBACrBC,IAAI,EAAEJ,YAAY,CAACK;gBACrB,CAAC,CAAC;gBACFrC,qBAAqB,CAAC,EAAE,CAAC;gBACzBE,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;cAClB,CAAC,MAAM;gBACLA,QAAQ,CAAC,0CAA0C,CAAC;cACtD;YACF,CAAC,CAAC,CACDK,KAAK,CAAEN,KAAK,IAAK;cAChBO,OAAO,CAACP,KAAK,CAAC,4CAA4C,EAAEA,KAAK,CAAC;cAClEC,QAAQ,CAAC,+DAA+D,CAAC;YAC3E,CAAC,CAAC;UACN,CAAE;UAEFQ,SAAS,EAAC,cAAc;UACxBa,KAAK,EAAE;YAAEe,OAAO,EAAE,MAAM;YAAEC,UAAU,EAAE;UAAS,CAAE;UAAA5B,QAAA,gBAElDlB,OAAA;YAAGiB,SAAS,EAAC;UAAoC;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,EACpDO,IAAI,CAACY,WAAW;QAAA,GALZX,CAAC;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAMJ,CAAC;MAET,CAAC,CAAC,GAAG;IAAE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACzB,EAAA,CAhFQF,SAAS;AAAA+C,EAAA,GAAT/C,SAAS;AAkFlB,eAAeA,SAAS;AAAC,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"// // import React, { useEffect, useState } from 'react';\n// // import axios from 'axios';\n// // import { useParams } from 'react-router-dom';\n// // import '../components/restaurantspec.css';\n\n// // function Restaurantspec() {\n// //     const [restaurantMenu, setRestaurantMenu] = useState([]);\n// //     const { restaurantId, restaurantName } = useParams();\n// //     const [openAccordion, setOpenAccordion] = useState(0);\n// //     console.log(restaurantId, restaurantName);\n\n// //     useEffect(() => {\n// //         axios.get(`https://www.swiggy.com/dapi/menu/pl?page-type=REGULAR_MENU&complete-menu=true&lat=17.37240&lng=78.43780&restaurantId=${restaurantId}&catalog_qa=undefined&submitAction=ENTER`)\n// //             .then((res) => {\n// //                 setRestaurantMenu(res.data?.data?.cards[4]?.groupedCard?.cardGroupMap?.REGULAR?.cards.slice(1));\n// //             });\n// //     }, [restaurantId]);\n\n// //     console.log(restaurantMenu);\n\n// //     const toggleAccordion = (index) => {\n// //         console.log('Toggling accordion:', index);\n// //         setOpenAccordion(openAccordion === index ? null : index); // Toggle the open state of the accordion\n// //     };\n\n// //     // useEffect(() => {\n// //     //     console.log('Open accordion:', openAccordion);\n// //     // }, [openAccordion]);\n\n// //     return (\n// //         <div className=\"container\">\n// //             <h2 className='restaurant-title'>{restaurantName} Menu</h2>\n// //             <div className=\"accordion\" id=\"accordionExample\">\n// //                 {restaurantMenu.map((item, i) => {\n// //                     if (item?.card?.card?.itemCards) {\n// //                         return (\n// //                             <div className=\"accordion-item\" key={i}>\n// //                                 <h2 className=\"accordion-header\">\n// //                                     <button\n// //                                          className={`accordion-button ${openAccordion === i ? '' : 'collapsed'}`}\n// //                                         type=\"button\"\n// //                                         onClick={() => toggleAccordion(i)} // Call toggleAccordion when button is clicked\n// //                                         aria-expanded={openAccordion === i ? 'true' : 'false'}\n// //                                         aria-controls={`collapse${i}`}\n// //                                         data-bs-toggle=\"collapse\"\n// //                                         data-bs-target={`#collapse${i}`}\n// //                                     >\n// //                                         <b className='category'>{item.card.card.title} - {item?.card?.card?.itemCards.length}</b>\n// //                                         <i className={`fas ${openAccordion == i ? 'fa-chevron-up' : 'fa-chevron-down'} accordion-icon`}></i>\n// //                                     </button>\n// //                                 </h2>\n// //                                 <div\n// //                                     id={`collapse${i}`}\n// //                                     className={`accordion-collapse collapse ${openAccordion === i ? 'show' : ''}`}\n// //                                     aria-labelledby={`heading${i}`}\n// //                                     data-bs-parent=\"#accordionExample\"\n// //                                 >\n// //                                     <div className=\"accordion-body\">\n// //                                         <div className=\"row row-cols-1 row-cols-md-6 g-2\">\n// //                                             {item?.card?.card?.itemCards?.map((item, j) => (\n// //                                                 <div className=\"col\" key={j}>\n// //                                                     <div className=\"card\">\n// //                                                         <img\n// //                                                             src={`https://media-assets.swiggy.com/swiggy/image/upload/fl_lossy,f_auto,q_auto,w_300,h_300,c_fit/${item.card.info.imageId}`}\n// //                                                             className=\"card-img-top food-pic\"\n// //                                                             alt={item.card.info.name}\n// //                                                         />\n// //                                                         <div className=\"card-body\">\n// //                                                             <h5 className=\"card-title\">{item.card.info.name}</h5>\n// //                                                             {item?.card?.info?.ratings?.aggregatedRating?.rating && (\n// //                                                                 <p>\n// //                                                                     <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-star-fill\" viewBox=\"0 0 16 16\">\n// //                                                                         <path d=\"M3.612 15.443c-.386.198-.824-.149-.746-.592l.83-4.73L.173 6.765c-.329-.314-.158-.888.283-.95l4.898-.696L7.538.792c.197-.39.73-.39.927 0l2.184 4.327 4.898.696c.441.062.612.636.282.95l-3.522 3.356.83 4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256z\" />\n// //                                                                     </svg>\n// //                                                                     {\" \" + item.card.info.ratings.aggregatedRating.rating}\n// //                                                                     <span style={{ marginLeft: \"10px\" }}>{item.card.info.ratings.aggregatedRating.ratingCount}</span>\n// //                                                                 </p>\n// //                                                             )}\n// //                                                             <p className=\"card-text\">This is a longer card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.</p>\n// //                                                         </div>\n// //                                                     </div>\n// //                                                 </div>\n// //                                             ))}\n// //                                         </div>\n// //                                     </div>\n// //                                 </div>\n// //                             </div>\n// //                         );\n// //                     }\n// //                     return null;\n// //                 })}\n// //             </div>\n// //         </div>\n// //     );\n// // }\n\n// // export default Restaurantspec;\n\n// import React, { useEffect, useState } from 'react';\n// import axios from 'axios';\n// import { useParams } from 'react-router-dom';\n// import '../components/restaurantspec.css';\n// import { addToCart } from './reducer';\n// import { useDispatch } from 'react-redux';\n\n// function Restaurantspec() {\n\n//     let dispatch = useDispatch();\n\n//     const [restaurantMenu, setRestaurantMenu] = useState([]);\n//     const { restaurantId, restaurantName } = useParams();\n//     const [openAccordion, setOpenAccordion] = useState(0);\n//     console.log(restaurantId, restaurantName);\n\n//     useEffect(() => {\n//         axios.get(`https://www.swiggy.com/dapi/menu/pl?page-type=REGULAR_MENU&complete-menu=true&lat=17.37240&lng=78.43780&restaurantId=${restaurantId}&catalog_qa=undefined&submitAction=ENTER`)\n//             .then((res) => {\n//                 setRestaurantMenu(res.data?.data?.cards[4]?.groupedCard?.cardGroupMap?.REGULAR?.cards.slice(1));\n//             });\n//     }, [restaurantId]);\n\n//     console.log(restaurantMenu);\n\n//     const toggleAccordion = (index) => {\n//         console.log('Toggling accordion:', index);\n//         setOpenAccordion(openAccordion === index ? null : index); // Toggle the open state of the accordion\n//     };\n\n//     // useEffect(() => {\n//     //     console.log('Open accordion:', openAccordion);\n//     // }, [openAccordion]);\n\n//     return (\n//         <div className=\"container\">\n//             <h2 className='restaurant-title'>{restaurantName} Menu</h2>\n//             <div className=\"accordion\" id=\"accordionExample\">\n//                 {restaurantMenu.map((item, i) => {\n//                     if (item?.card?.card?.itemCards) {\n//                         return (\n//                             <div className=\"accordion-item\" key={i}>\n//                                 <h2 className=\"accordion-header\">\n//                                     <button\n//                                          className={`accordion-button ${openAccordion === i ? '' : 'collapsed'}`}\n//                                         type=\"button\"\n//                                         onClick={() => toggleAccordion(i)} // Call toggleAccordion when button is clicked\n//                                         aria-expanded={openAccordion === i ? 'true' : 'false'}\n//                                         aria-controls={`collapse${i}`}\n//                                         data-bs-toggle=\"collapse\"\n//                                         data-bs-target={`#collapse${i}`}\n//                                     >\n//                                         <b className='category'>{item.card.card.title} - {item?.card?.card?.itemCards.length}</b>\n//                                         <i className={`fas ${openAccordion == i ? 'fa-chevron-up' : 'fa-chevron-down'} accordion-icon`}></i>\n//                                     </button>\n//                                 </h2>\n//                                 <div\n//                                     id={`collapse${i}`}\n//                                     className={`accordion-collapse collapse ${openAccordion === i ? 'show' : ''}`}\n//                                     aria-labelledby={`heading${i}`}\n//                                     data-bs-parent=\"#accordionExample\"\n//                                 >\n//                                     <div className=\"accordion-body\">\n//                                         <div className=\"row row-cols-1 row-cols-md-6 g-2\">\n//                                             {item?.card?.card?.itemCards?.map((item, j) => (\n//                                                 <div className=\"col\" key={j}>\n//                                                     <div className=\"card\">\n//                                                         <img\n//                                                             src={`https://media-assets.swiggy.com/swiggy/image/upload/fl_lossy,f_auto,q_auto,w_300,h_300,c_fit/${item.card.info.imageId}`}\n//                                                             className=\"card-img-top food-pic\"\n//                                                             alt={item.card.info.name}\n//                                                         />\n//                                                         <div className=\"card-body\">\n//                                                             <h5 className=\"card-title\">{item.card.info.name}</h5>\n//                                                             {item?.card?.info?.ratings?.aggregatedRating?.rating && (\n//                                                                 <p>\n//                                                                     <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-star-fill\" viewBox=\"0 0 16 16\">\n//                                                                         <path d=\"M3.612 15.443c-.386.198-.824-.149-.746-.592l.83-4.73L.173 6.765c-.329-.314-.158-.888.283-.95l4.898-.696L7.538.792c.197-.39.73-.39.927 0l2.184 4.327 4.898.696c.441.062.612.636.282.95l-3.522 3.356.83 4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256z\" />\n//                                                                     </svg>\n//                                                                     {\" \" + item.card.info.ratings.aggregatedRating.rating}\n//                                                                     <span style={{ marginLeft: \"10px\" }}>{item.card.info.ratings.aggregatedRating.ratingCount}</span>\n//                                                                 </p>\n//                                                             )}\n//                                                             <p className=\"card-text\">\n//                                                                 <b>\n//                                                                     Price : &#8377;\n//                                                                     {\n//                                                                     item.card.info.price ? (Number(item.card.info.price) / 100).toFixed(2): item.card.info.defaultPrice? (Number(item.card.info.defaultPrice) / 100).toFixed(2): 'N/A'\n//                                                                     }\n//                                                                 </b>\n//                                                             </p>\n\n//                                                             <p className=\"card-text\">This is a longer card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.</p>\n//                                                             <div style={{textAlign : \"center\"}}>\n//                                                                 <button \n//                                                                  onClick={()=>{\n//                                                                     dispatch(addToCart({Name : item.card.info.name ,Description : item.card.info.description , Price : item.card.info.price ? item.card.info.price/100 : item.card.info.defaultPrice/100,\n//                                                                       Img : `https://media-assets.swiggy.com/swiggy/image/upload/fl_lossy,f_auto,q_auto,w_600/${item?.card?.info?.imageId}`\n//                                                                     }))\n//                                                                   }}\n//                                                                 className='menubtn'style = {{borderRadius : \"5px\"}} >Add to Cart</button>\n//                                                             </div>\n//                                                         </div>\n//                                                     </div>\n//                                                 </div>\n//                                             ))}\n//                                         </div>\n//                                     </div>\n//                                 </div>\n//                             </div>\n//                         );\n//                     }\n//                     return null;\n//                 })}\n//             </div>\n//         </div>\n//     );\n// }\n\n// export default Restaurantspec;","map":{"version":3,"names":[],"sources":["C:/Users/SANTHOSH/React_Applications/swiggy/src/components/restaurantspec.js"],"sourcesContent":["// // import React, { useEffect, useState } from 'react';\r\n// // import axios from 'axios';\r\n// // import { useParams } from 'react-router-dom';\r\n// // import '../components/restaurantspec.css';\r\n\r\n// // function Restaurantspec() {\r\n// //     const [restaurantMenu, setRestaurantMenu] = useState([]);\r\n// //     const { restaurantId, restaurantName } = useParams();\r\n// //     const [openAccordion, setOpenAccordion] = useState(0);\r\n// //     console.log(restaurantId, restaurantName);\r\n\r\n// //     useEffect(() => {\r\n// //         axios.get(`https://www.swiggy.com/dapi/menu/pl?page-type=REGULAR_MENU&complete-menu=true&lat=17.37240&lng=78.43780&restaurantId=${restaurantId}&catalog_qa=undefined&submitAction=ENTER`)\r\n// //             .then((res) => {\r\n// //                 setRestaurantMenu(res.data?.data?.cards[4]?.groupedCard?.cardGroupMap?.REGULAR?.cards.slice(1));\r\n// //             });\r\n// //     }, [restaurantId]);\r\n\r\n// //     console.log(restaurantMenu);\r\n\r\n// //     const toggleAccordion = (index) => {\r\n// //         console.log('Toggling accordion:', index);\r\n// //         setOpenAccordion(openAccordion === index ? null : index); // Toggle the open state of the accordion\r\n// //     };\r\n    \r\n\r\n// //     // useEffect(() => {\r\n// //     //     console.log('Open accordion:', openAccordion);\r\n// //     // }, [openAccordion]);\r\n\r\n// //     return (\r\n// //         <div className=\"container\">\r\n// //             <h2 className='restaurant-title'>{restaurantName} Menu</h2>\r\n// //             <div className=\"accordion\" id=\"accordionExample\">\r\n// //                 {restaurantMenu.map((item, i) => {\r\n// //                     if (item?.card?.card?.itemCards) {\r\n// //                         return (\r\n// //                             <div className=\"accordion-item\" key={i}>\r\n// //                                 <h2 className=\"accordion-header\">\r\n// //                                     <button\r\n// //                                          className={`accordion-button ${openAccordion === i ? '' : 'collapsed'}`}\r\n// //                                         type=\"button\"\r\n// //                                         onClick={() => toggleAccordion(i)} // Call toggleAccordion when button is clicked\r\n// //                                         aria-expanded={openAccordion === i ? 'true' : 'false'}\r\n// //                                         aria-controls={`collapse${i}`}\r\n// //                                         data-bs-toggle=\"collapse\"\r\n// //                                         data-bs-target={`#collapse${i}`}\r\n// //                                     >\r\n// //                                         <b className='category'>{item.card.card.title} - {item?.card?.card?.itemCards.length}</b>\r\n// //                                         <i className={`fas ${openAccordion == i ? 'fa-chevron-up' : 'fa-chevron-down'} accordion-icon`}></i>\r\n// //                                     </button>\r\n// //                                 </h2>\r\n// //                                 <div\r\n// //                                     id={`collapse${i}`}\r\n// //                                     className={`accordion-collapse collapse ${openAccordion === i ? 'show' : ''}`}\r\n// //                                     aria-labelledby={`heading${i}`}\r\n// //                                     data-bs-parent=\"#accordionExample\"\r\n// //                                 >\r\n// //                                     <div className=\"accordion-body\">\r\n// //                                         <div className=\"row row-cols-1 row-cols-md-6 g-2\">\r\n// //                                             {item?.card?.card?.itemCards?.map((item, j) => (\r\n// //                                                 <div className=\"col\" key={j}>\r\n// //                                                     <div className=\"card\">\r\n// //                                                         <img\r\n// //                                                             src={`https://media-assets.swiggy.com/swiggy/image/upload/fl_lossy,f_auto,q_auto,w_300,h_300,c_fit/${item.card.info.imageId}`}\r\n// //                                                             className=\"card-img-top food-pic\"\r\n// //                                                             alt={item.card.info.name}\r\n// //                                                         />\r\n// //                                                         <div className=\"card-body\">\r\n// //                                                             <h5 className=\"card-title\">{item.card.info.name}</h5>\r\n// //                                                             {item?.card?.info?.ratings?.aggregatedRating?.rating && (\r\n// //                                                                 <p>\r\n// //                                                                     <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-star-fill\" viewBox=\"0 0 16 16\">\r\n// //                                                                         <path d=\"M3.612 15.443c-.386.198-.824-.149-.746-.592l.83-4.73L.173 6.765c-.329-.314-.158-.888.283-.95l4.898-.696L7.538.792c.197-.39.73-.39.927 0l2.184 4.327 4.898.696c.441.062.612.636.282.95l-3.522 3.356.83 4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256z\" />\r\n// //                                                                     </svg>\r\n// //                                                                     {\" \" + item.card.info.ratings.aggregatedRating.rating}\r\n// //                                                                     <span style={{ marginLeft: \"10px\" }}>{item.card.info.ratings.aggregatedRating.ratingCount}</span>\r\n// //                                                                 </p>\r\n// //                                                             )}\r\n// //                                                             <p className=\"card-text\">This is a longer card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.</p>\r\n// //                                                         </div>\r\n// //                                                     </div>\r\n// //                                                 </div>\r\n// //                                             ))}\r\n// //                                         </div>\r\n// //                                     </div>\r\n// //                                 </div>\r\n// //                             </div>\r\n// //                         );\r\n// //                     }\r\n// //                     return null;\r\n// //                 })}\r\n// //             </div>\r\n// //         </div>\r\n// //     );\r\n// // }\r\n\r\n// // export default Restaurantspec;\r\n\r\n// import React, { useEffect, useState } from 'react';\r\n// import axios from 'axios';\r\n// import { useParams } from 'react-router-dom';\r\n// import '../components/restaurantspec.css';\r\n// import { addToCart } from './reducer';\r\n// import { useDispatch } from 'react-redux';\r\n\r\n// function Restaurantspec() {\r\n\r\n//     let dispatch = useDispatch();\r\n\r\n//     const [restaurantMenu, setRestaurantMenu] = useState([]);\r\n//     const { restaurantId, restaurantName } = useParams();\r\n//     const [openAccordion, setOpenAccordion] = useState(0);\r\n//     console.log(restaurantId, restaurantName);\r\n\r\n//     useEffect(() => {\r\n//         axios.get(`https://www.swiggy.com/dapi/menu/pl?page-type=REGULAR_MENU&complete-menu=true&lat=17.37240&lng=78.43780&restaurantId=${restaurantId}&catalog_qa=undefined&submitAction=ENTER`)\r\n//             .then((res) => {\r\n//                 setRestaurantMenu(res.data?.data?.cards[4]?.groupedCard?.cardGroupMap?.REGULAR?.cards.slice(1));\r\n//             });\r\n//     }, [restaurantId]);\r\n\r\n//     console.log(restaurantMenu);\r\n\r\n//     const toggleAccordion = (index) => {\r\n//         console.log('Toggling accordion:', index);\r\n//         setOpenAccordion(openAccordion === index ? null : index); // Toggle the open state of the accordion\r\n//     };\r\n    \r\n\r\n//     // useEffect(() => {\r\n//     //     console.log('Open accordion:', openAccordion);\r\n//     // }, [openAccordion]);\r\n\r\n//     return (\r\n//         <div className=\"container\">\r\n//             <h2 className='restaurant-title'>{restaurantName} Menu</h2>\r\n//             <div className=\"accordion\" id=\"accordionExample\">\r\n//                 {restaurantMenu.map((item, i) => {\r\n//                     if (item?.card?.card?.itemCards) {\r\n//                         return (\r\n//                             <div className=\"accordion-item\" key={i}>\r\n//                                 <h2 className=\"accordion-header\">\r\n//                                     <button\r\n//                                          className={`accordion-button ${openAccordion === i ? '' : 'collapsed'}`}\r\n//                                         type=\"button\"\r\n//                                         onClick={() => toggleAccordion(i)} // Call toggleAccordion when button is clicked\r\n//                                         aria-expanded={openAccordion === i ? 'true' : 'false'}\r\n//                                         aria-controls={`collapse${i}`}\r\n//                                         data-bs-toggle=\"collapse\"\r\n//                                         data-bs-target={`#collapse${i}`}\r\n//                                     >\r\n//                                         <b className='category'>{item.card.card.title} - {item?.card?.card?.itemCards.length}</b>\r\n//                                         <i className={`fas ${openAccordion == i ? 'fa-chevron-up' : 'fa-chevron-down'} accordion-icon`}></i>\r\n//                                     </button>\r\n//                                 </h2>\r\n//                                 <div\r\n//                                     id={`collapse${i}`}\r\n//                                     className={`accordion-collapse collapse ${openAccordion === i ? 'show' : ''}`}\r\n//                                     aria-labelledby={`heading${i}`}\r\n//                                     data-bs-parent=\"#accordionExample\"\r\n//                                 >\r\n//                                     <div className=\"accordion-body\">\r\n//                                         <div className=\"row row-cols-1 row-cols-md-6 g-2\">\r\n//                                             {item?.card?.card?.itemCards?.map((item, j) => (\r\n//                                                 <div className=\"col\" key={j}>\r\n//                                                     <div className=\"card\">\r\n//                                                         <img\r\n//                                                             src={`https://media-assets.swiggy.com/swiggy/image/upload/fl_lossy,f_auto,q_auto,w_300,h_300,c_fit/${item.card.info.imageId}`}\r\n//                                                             className=\"card-img-top food-pic\"\r\n//                                                             alt={item.card.info.name}\r\n//                                                         />\r\n//                                                         <div className=\"card-body\">\r\n//                                                             <h5 className=\"card-title\">{item.card.info.name}</h5>\r\n//                                                             {item?.card?.info?.ratings?.aggregatedRating?.rating && (\r\n//                                                                 <p>\r\n//                                                                     <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-star-fill\" viewBox=\"0 0 16 16\">\r\n//                                                                         <path d=\"M3.612 15.443c-.386.198-.824-.149-.746-.592l.83-4.73L.173 6.765c-.329-.314-.158-.888.283-.95l4.898-.696L7.538.792c.197-.39.73-.39.927 0l2.184 4.327 4.898.696c.441.062.612.636.282.95l-3.522 3.356.83 4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256z\" />\r\n//                                                                     </svg>\r\n//                                                                     {\" \" + item.card.info.ratings.aggregatedRating.rating}\r\n//                                                                     <span style={{ marginLeft: \"10px\" }}>{item.card.info.ratings.aggregatedRating.ratingCount}</span>\r\n//                                                                 </p>\r\n//                                                             )}\r\n//                                                             <p className=\"card-text\">\r\n//                                                                 <b>\r\n//                                                                     Price : &#8377;\r\n//                                                                     {\r\n//                                                                     item.card.info.price ? (Number(item.card.info.price) / 100).toFixed(2): item.card.info.defaultPrice? (Number(item.card.info.defaultPrice) / 100).toFixed(2): 'N/A'\r\n//                                                                     }\r\n//                                                                 </b>\r\n//                                                             </p>\r\n\r\n//                                                             <p className=\"card-text\">This is a longer card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.</p>\r\n//                                                             <div style={{textAlign : \"center\"}}>\r\n//                                                                 <button \r\n//                                                                  onClick={()=>{\r\n//                                                                     dispatch(addToCart({Name : item.card.info.name ,Description : item.card.info.description , Price : item.card.info.price ? item.card.info.price/100 : item.card.info.defaultPrice/100,\r\n//                                                                       Img : `https://media-assets.swiggy.com/swiggy/image/upload/fl_lossy,f_auto,q_auto,w_600/${item?.card?.info?.imageId}`\r\n//                                                                     }))\r\n//                                                                   }}\r\n//                                                                 className='menubtn'style = {{borderRadius : \"5px\"}} >Add to Cart</button>\r\n//                                                             </div>\r\n//                                                         </div>\r\n//                                                     </div>\r\n//                                                 </div>\r\n//                                             ))}\r\n//                                         </div>\r\n//                                     </div>\r\n//                                 </div>\r\n//                             </div>\r\n//                         );\r\n//                     }\r\n//                     return null;\r\n//                 })}\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default Restaurantspec;\r\n\r\n\r\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
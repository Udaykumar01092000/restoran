{"ast":null,"code":"// import React from 'react'\n// import './cart.css';\n// import { useSelector , useDispatch } from 'react-redux'\n// import {removeFromCart} from './reducer'\n\n// function Cart() {\n\n//     let dispatch = useDispatch()\n\n//     let cartItems = useSelector((state) => {\n//         return state.cartItems\n//     })\n\n//     console.log(cartItems)\n\n//     let totalPrice = cartItems.reduce((acc,item ,i)=>{\n//         return acc + item.Price\n//     },0)\n\n//     return (\n//         <div>\n//             <h2 style={{ textAlign: \"center\" }}>Cart</h2>\n//             <h4 style={{ textAlign: \"center\" }}>Price = {totalPrice}</h4>\n//             <div class=\"container\">\n//                 <div class=\"row row-cols-1 row-cols-md-2 g-2 m-4\">\n//                     {cartItems.map((item ,i)=>{\n//                         return <div class=\"row g-0\">\n//                             <div class=\"col-md-6 p-4\">\n//                                 <img src= {item.Img} class=\"img-fluid rounded\" style = {{height:\"250px\" ,width : \"300px\"}} alt=\"...\" />\n//                             </div>\n//                             <div class=\"col-md-6\">\n//                                 <div class=\"card-body\">\n//                                     <h5 class=\"card-title\">{item.Name}</h5>\n//                                     <p class=\"card-text\"><b>&#8377;</b>{\" \" +item.Price}</p>\n//                                     <p class=\"card-text\">{item.description}</p>\n//                                     <button className='btn btn-danger'\n//                                     onClick = {()=>{\n//                                         dispatch(removeFromCart(i))\n//                                     }}\n//                                     >Remove From Cart</button>\n//                                 </div>\n//                             </div>\n//                         </div>\n//                     })}\n//                 </div>\n//             </div>\n//         </div>)}\n\n// export default Cart\n\nimport { createSlice } from \"@reduxjs/toolkit\";\nlet initialState = {\n  cartItems: []\n};\nlet slice = createSlice({\n  name: \"cart\",\n  initialState: initialState,\n  reducers: {\n    addToCart: (state, action) => {\n      state.cartItems.push(action.payload);\n    },\n    removeFromCart: (state, action) => {\n      var _state$cartItems$inde;\n      const {\n        index,\n        quantity\n      } = action.payload;\n      const currentQuantity = ((_state$cartItems$inde = state.cartItems[index]) === null || _state$cartItems$inde === void 0 ? void 0 : _state$cartItems$inde.Quantity) || 0;\n      if (quantity >= currentQuantity) {\n        state.cartItems.splice(index, 1);\n      } else {\n        state.cartItems[index].Quantity -= quantity;\n      }\n    },\n    updateQuantity: (state, action) => {\n      const {\n        index,\n        quantity\n      } = action.payload;\n      state.cartItems[index].Quantity = quantity;\n    }\n  }\n});\nexport const {\n  addToCart,\n  removeFromCart,\n  updateQuantity\n} = slice.actions;\nexport default slice.reducer;","map":{"version":3,"names":["createSlice","initialState","cartItems","slice","name","reducers","addToCart","state","action","push","payload","removeFromCart","_state$cartItems$inde","index","quantity","currentQuantity","Quantity","splice","updateQuantity","actions","reducer"],"sources":["C:/Users/SANTHOSH/React_Applications/swiggy/src/components/Cart.js"],"sourcesContent":["// import React from 'react'\r\n// import './cart.css';\r\n// import { useSelector , useDispatch } from 'react-redux'\r\n// import {removeFromCart} from './reducer'\r\n\r\n// function Cart() {\r\n\r\n//     let dispatch = useDispatch()\r\n\r\n//     let cartItems = useSelector((state) => {\r\n//         return state.cartItems\r\n//     })\r\n\r\n//     console.log(cartItems)\r\n\r\n//     let totalPrice = cartItems.reduce((acc,item ,i)=>{\r\n//         return acc + item.Price\r\n//     },0)\r\n\r\n//     return (\r\n//         <div>\r\n//             <h2 style={{ textAlign: \"center\" }}>Cart</h2>\r\n//             <h4 style={{ textAlign: \"center\" }}>Price = {totalPrice}</h4>\r\n//             <div class=\"container\">\r\n//                 <div class=\"row row-cols-1 row-cols-md-2 g-2 m-4\">\r\n//                     {cartItems.map((item ,i)=>{\r\n//                         return <div class=\"row g-0\">\r\n//                             <div class=\"col-md-6 p-4\">\r\n//                                 <img src= {item.Img} class=\"img-fluid rounded\" style = {{height:\"250px\" ,width : \"300px\"}} alt=\"...\" />\r\n//                             </div>\r\n//                             <div class=\"col-md-6\">\r\n//                                 <div class=\"card-body\">\r\n//                                     <h5 class=\"card-title\">{item.Name}</h5>\r\n//                                     <p class=\"card-text\"><b>&#8377;</b>{\" \" +item.Price}</p>\r\n//                                     <p class=\"card-text\">{item.description}</p>\r\n//                                     <button className='btn btn-danger'\r\n//                                     onClick = {()=>{\r\n//                                         dispatch(removeFromCart(i))\r\n//                                     }}\r\n//                                     >Remove From Cart</button>\r\n//                                 </div>\r\n//                             </div>\r\n//                         </div>\r\n//                     })}\r\n//                 </div>\r\n//             </div>\r\n//         </div>)}\r\n\r\n// export default Cart\r\n\r\n\r\n\r\nimport { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nlet initialState = {\r\n    cartItems: []\r\n}\r\n\r\nlet slice = createSlice({\r\n    name: \"cart\",\r\n    initialState: initialState,\r\n    reducers: {\r\n        addToCart: (state, action) => {\r\n            state.cartItems.push(action.payload);\r\n        },\r\n\r\n        removeFromCart: (state, action) => {\r\n            const { index, quantity } = action.payload;\r\n            const currentQuantity = state.cartItems[index]?.Quantity || 0;\r\n            if (quantity >= currentQuantity) {\r\n                state.cartItems.splice(index, 1);\r\n            } else {\r\n                state.cartItems[index].Quantity -= quantity;\r\n            }\r\n        },\r\n\r\n        updateQuantity: (state, action) => {\r\n            const { index, quantity } = action.payload;\r\n            state.cartItems[index].Quantity = quantity;\r\n        }\r\n    }\r\n});\r\n\r\nexport const { addToCart, removeFromCart, updateQuantity } = slice.actions;\r\nexport default slice.reducer;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,IAAIC,YAAY,GAAG;EACfC,SAAS,EAAE;AACf,CAAC;AAED,IAAIC,KAAK,GAAGH,WAAW,CAAC;EACpBI,IAAI,EAAE,MAAM;EACZH,YAAY,EAAEA,YAAY;EAC1BI,QAAQ,EAAE;IACNC,SAAS,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC1BD,KAAK,CAACL,SAAS,CAACO,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC;IACxC,CAAC;IAEDC,cAAc,EAAEA,CAACJ,KAAK,EAAEC,MAAM,KAAK;MAAA,IAAAI,qBAAA;MAC/B,MAAM;QAAEC,KAAK;QAAEC;MAAS,CAAC,GAAGN,MAAM,CAACE,OAAO;MAC1C,MAAMK,eAAe,GAAG,EAAAH,qBAAA,GAAAL,KAAK,CAACL,SAAS,CAACW,KAAK,CAAC,cAAAD,qBAAA,uBAAtBA,qBAAA,CAAwBI,QAAQ,KAAI,CAAC;MAC7D,IAAIF,QAAQ,IAAIC,eAAe,EAAE;QAC7BR,KAAK,CAACL,SAAS,CAACe,MAAM,CAACJ,KAAK,EAAE,CAAC,CAAC;MACpC,CAAC,MAAM;QACHN,KAAK,CAACL,SAAS,CAACW,KAAK,CAAC,CAACG,QAAQ,IAAIF,QAAQ;MAC/C;IACJ,CAAC;IAEDI,cAAc,EAAEA,CAACX,KAAK,EAAEC,MAAM,KAAK;MAC/B,MAAM;QAAEK,KAAK;QAAEC;MAAS,CAAC,GAAGN,MAAM,CAACE,OAAO;MAC1CH,KAAK,CAACL,SAAS,CAACW,KAAK,CAAC,CAACG,QAAQ,GAAGF,QAAQ;IAC9C;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAER,SAAS;EAAEK,cAAc;EAAEO;AAAe,CAAC,GAAGf,KAAK,CAACgB,OAAO;AAC1E,eAAehB,KAAK,CAACiB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"// import { createSlice } from \"@reduxjs/toolkit\";\n\n// let initialState = {\n//     cartItems : []\n// }\n\n// let slice = createSlice({\n//     name : \"cart\",\n//     initialState : initialState,\n//     reducers :{\n//         addToCart : (state , action)=>{\n//             state.cartItems.push(action.payload)\n//         },\n\n//         removeFromCart : (state , action)=>{\n//             state.cartItems.splice(action.payload , 1)\n//         }\n//     }\n// })\n\n// export const {addToCart , removeFromCart} = slice.actions\n// export default slice.reducer;\n\nimport { createSlice } from \"@reduxjs/toolkit\";\nlet initialState = {\n  cartItems: []\n};\nlet slice = createSlice({\n  name: \"cart\",\n  initialState: initialState,\n  reducers: {\n    addToCart: (state, action) => {\n      const existingItem = state.cartItems.find(item => item.id === action.payload.id);\n      if (existingItem) {\n        existingItem.quantity += 1; // Increase quantity if item already exists\n      } else {\n        state.cartItems.push({\n          ...action.payload,\n          quantity: 1\n        }); // Add as new item with quantity 1\n      }\n    },\n    removeFromCart: (state, action) => {\n      const index = state.cartItems.findIndex(item => item.id === action.payload.id);\n      if (index !== -1) {\n        if (state.cartItems[index].quantity > 1) {\n          state.cartItems[index].quantity -= 1; // Decrease quantity if more than 1\n        } else {\n          state.cartItems.splice(index, 1); // Remove item if quantity is 1\n        }\n      }\n    }\n  }\n});\nexport const {\n  addToCart,\n  removeFromCart\n} = slice.actions;\nexport default slice.reducer;","map":{"version":3,"names":["createSlice","initialState","cartItems","slice","name","reducers","addToCart","state","action","existingItem","find","item","id","payload","quantity","push","removeFromCart","index","findIndex","splice","actions","reducer"],"sources":["C:/Users/SANTHOSH/React_Applications/swiggy/src/components/reducer.js"],"sourcesContent":["// import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n\r\n// let initialState = {\r\n//     cartItems : []\r\n// }\r\n\r\n// let slice = createSlice({\r\n//     name : \"cart\",\r\n//     initialState : initialState,\r\n//     reducers :{\r\n//         addToCart : (state , action)=>{\r\n//             state.cartItems.push(action.payload)\r\n//         },\r\n\r\n//         removeFromCart : (state , action)=>{\r\n//             state.cartItems.splice(action.payload , 1)\r\n//         }\r\n//     }\r\n// })\r\n\r\n// export const {addToCart , removeFromCart} = slice.actions\r\n// export default slice.reducer;\r\n\r\nimport { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nlet initialState = {\r\n    cartItems: []\r\n};\r\n\r\nlet slice = createSlice({\r\n    name: \"cart\",\r\n    initialState: initialState,\r\n    reducers: {\r\n        addToCart: (state, action) => {\r\n            const existingItem = state.cartItems.find(item => item.id === action.payload.id);\r\n            if (existingItem) {\r\n                existingItem.quantity += 1; // Increase quantity if item already exists\r\n            } else {\r\n                state.cartItems.push({ ...action.payload, quantity: 1 }); // Add as new item with quantity 1\r\n            }\r\n        },\r\n        removeFromCart: (state, action) => {\r\n            const index = state.cartItems.findIndex(item => item.id === action.payload.id);\r\n            if (index !== -1) {\r\n                if (state.cartItems[index].quantity > 1) {\r\n                    state.cartItems[index].quantity -= 1; // Decrease quantity if more than 1\r\n                } else {\r\n                    state.cartItems.splice(index, 1); // Remove item if quantity is 1\r\n                }\r\n            }\r\n        }\r\n    }\r\n});\r\n\r\nexport const { addToCart, removeFromCart } = slice.actions;\r\nexport default slice.reducer;\r\n"],"mappings":"AAAA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,IAAIC,YAAY,GAAG;EACfC,SAAS,EAAE;AACf,CAAC;AAED,IAAIC,KAAK,GAAGH,WAAW,CAAC;EACpBI,IAAI,EAAE,MAAM;EACZH,YAAY,EAAEA,YAAY;EAC1BI,QAAQ,EAAE;IACNC,SAAS,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC1B,MAAMC,YAAY,GAAGF,KAAK,CAACL,SAAS,CAACQ,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKJ,MAAM,CAACK,OAAO,CAACD,EAAE,CAAC;MAChF,IAAIH,YAAY,EAAE;QACdA,YAAY,CAACK,QAAQ,IAAI,CAAC,CAAC,CAAC;MAChC,CAAC,MAAM;QACHP,KAAK,CAACL,SAAS,CAACa,IAAI,CAAC;UAAE,GAAGP,MAAM,CAACK,OAAO;UAAEC,QAAQ,EAAE;QAAE,CAAC,CAAC,CAAC,CAAC;MAC9D;IACJ,CAAC;IACDE,cAAc,EAAEA,CAACT,KAAK,EAAEC,MAAM,KAAK;MAC/B,MAAMS,KAAK,GAAGV,KAAK,CAACL,SAAS,CAACgB,SAAS,CAACP,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKJ,MAAM,CAACK,OAAO,CAACD,EAAE,CAAC;MAC9E,IAAIK,KAAK,KAAK,CAAC,CAAC,EAAE;QACd,IAAIV,KAAK,CAACL,SAAS,CAACe,KAAK,CAAC,CAACH,QAAQ,GAAG,CAAC,EAAE;UACrCP,KAAK,CAACL,SAAS,CAACe,KAAK,CAAC,CAACH,QAAQ,IAAI,CAAC,CAAC,CAAC;QAC1C,CAAC,MAAM;UACHP,KAAK,CAACL,SAAS,CAACiB,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC;QACtC;MACJ;IACJ;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEX,SAAS;EAAEU;AAAe,CAAC,GAAGb,KAAK,CAACiB,OAAO;AAC1D,eAAejB,KAAK,CAACkB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
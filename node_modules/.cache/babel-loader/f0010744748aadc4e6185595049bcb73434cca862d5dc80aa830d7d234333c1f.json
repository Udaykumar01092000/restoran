{"ast":null,"code":"// import { createSlice } from \"@reduxjs/toolkit\";\n\n// let initialState = {\n//     cartItems : []\n// }\n\n// let slice = createSlice({\n//     name : \"cart\",\n//     initialState : initialState,\n//     reducers :{\n//         addToCart : (state , action)=>{\n//             state.cartItems.push(action.payload)\n//         },\n\n//         removeFromCart : (state , action)=>{\n//             state.cartItems.splice(action.payload , 1)\n//         }\n//     }\n// })\n\n// export const {addToCart , removeFromCart} = slice.actions\n// export default slice.reducer;\n\n// slice.js\n\nimport { createSlice } from \"@reduxjs/toolkit\";\nlet initialState = {\n  cartItems: []\n};\nlet slice = createSlice({\n  name: \"cart\",\n  initialState: initialState,\n  reducers: {\n    addToCart: (state, action) => {\n      state.cartItems.push(action.payload);\n    },\n    removeFromCart: (state, action) => {\n      state.cartItems.splice(action.payload, 1);\n    },\n    updateQuantity: (state, action) => {\n      const {\n        itemId,\n        quantity\n      } = action.payload;\n      const itemIndex = state.cartItems.findIndex(item => item.id === itemId);\n      if (itemIndex !== -1) {\n        state.cartItems[itemIndex].quantity = quantity;\n      }\n    }\n  }\n});\nexport const {\n  addToCart,\n  removeFromCart,\n  updateQuantity\n} = slice.actions;\nexport default slice.reducer;","map":{"version":3,"names":["createSlice","initialState","cartItems","slice","name","reducers","addToCart","state","action","push","payload","removeFromCart","splice","updateQuantity","itemId","quantity","itemIndex","findIndex","item","id","actions","reducer"],"sources":["C:/Users/SANTHOSH/React_Applications/swiggy/src/components/reducer.js"],"sourcesContent":["// import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n\r\n// let initialState = {\r\n//     cartItems : []\r\n// }\r\n\r\n// let slice = createSlice({\r\n//     name : \"cart\",\r\n//     initialState : initialState,\r\n//     reducers :{\r\n//         addToCart : (state , action)=>{\r\n//             state.cartItems.push(action.payload)\r\n//         },\r\n\r\n//         removeFromCart : (state , action)=>{\r\n//             state.cartItems.splice(action.payload , 1)\r\n//         }\r\n//     }\r\n// })\r\n\r\n// export const {addToCart , removeFromCart} = slice.actions\r\n// export default slice.reducer;\r\n\r\n// slice.js\r\n\r\nimport { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nlet initialState = {\r\n    cartItems: []\r\n};\r\n\r\nlet slice = createSlice({\r\n    name: \"cart\",\r\n    initialState: initialState,\r\n    reducers: {\r\n        addToCart: (state, action) => {\r\n            state.cartItems.push(action.payload);\r\n        },\r\n        removeFromCart: (state, action) => {\r\n            state.cartItems.splice(action.payload, 1);\r\n        },\r\n        updateQuantity: (state, action) => {\r\n            const { itemId, quantity } = action.payload;\r\n            const itemIndex = state.cartItems.findIndex(item => item.id === itemId);\r\n            if (itemIndex !== -1) {\r\n                state.cartItems[itemIndex].quantity = quantity;\r\n            }\r\n        }\r\n    }\r\n});\r\n\r\nexport const { addToCart, removeFromCart, updateQuantity } = slice.actions;\r\nexport default slice.reducer;\r\n"],"mappings":"AAAA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,IAAIC,YAAY,GAAG;EACfC,SAAS,EAAE;AACf,CAAC;AAED,IAAIC,KAAK,GAAGH,WAAW,CAAC;EACpBI,IAAI,EAAE,MAAM;EACZH,YAAY,EAAEA,YAAY;EAC1BI,QAAQ,EAAE;IACNC,SAAS,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC1BD,KAAK,CAACL,SAAS,CAACO,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC;IACxC,CAAC;IACDC,cAAc,EAAEA,CAACJ,KAAK,EAAEC,MAAM,KAAK;MAC/BD,KAAK,CAACL,SAAS,CAACU,MAAM,CAACJ,MAAM,CAACE,OAAO,EAAE,CAAC,CAAC;IAC7C,CAAC;IACDG,cAAc,EAAEA,CAACN,KAAK,EAAEC,MAAM,KAAK;MAC/B,MAAM;QAAEM,MAAM;QAAEC;MAAS,CAAC,GAAGP,MAAM,CAACE,OAAO;MAC3C,MAAMM,SAAS,GAAGT,KAAK,CAACL,SAAS,CAACe,SAAS,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKL,MAAM,CAAC;MACvE,IAAIE,SAAS,KAAK,CAAC,CAAC,EAAE;QAClBT,KAAK,CAACL,SAAS,CAACc,SAAS,CAAC,CAACD,QAAQ,GAAGA,QAAQ;MAClD;IACJ;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAET,SAAS;EAAEK,cAAc;EAAEE;AAAe,CAAC,GAAGV,KAAK,CAACiB,OAAO;AAC1E,eAAejB,KAAK,CAACkB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}